{
  "component-definition": {
    "uuid": "e5308ff4-6e9d-4a52-92ff-5299f8c10a11",
    "metadata": {
      "title": "Component definition for ocp4",
      "last-modified": "2025-09-12T15:48:20.904502+08:00",
      "version": "1.0",
      "oscal-version": "1.1.3"
    },
    "components": [
      {
        "uuid": "32e252ae-fa94-488e-a6e3-5c5dbb88bb52",
        "type": "service",
        "title": "ocp4",
        "description": "Red Hat OpenShift Container Platform 4",
        "props": [
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "general_namespace_separation",
            "remarks": "rule_set_000"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Each Namespace should only host one application",
            "remarks": "rule_set_000"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_anonymous_auth",
            "remarks": "rule_set_001"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that anonymous requests to the API Server are authorized",
            "remarks": "rule_set_001"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kubelet_anonymous_auth",
            "remarks": "rule_set_002"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Disable Anonymous Authentication to the Kubelet",
            "remarks": "rule_set_002"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kubeadmin_removed",
            "remarks": "rule_set_003"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that the kubeadmin secret has been removed",
            "remarks": "rule_set_003"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "rbac_least_privilege",
            "remarks": "rule_set_004"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that the RBAC setup follows the principle of least privilege",
            "remarks": "rule_set_004"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "coreos_enable_selinux_kernel_argument",
            "remarks": "rule_set_005"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure SELinux Not Disabled in the kernel arguments",
            "remarks": "rule_set_005"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "selinux_policytype",
            "remarks": "rule_set_006"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Configure SELinux Policy",
            "remarks": "rule_set_006"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "selinux_state",
            "remarks": "rule_set_007"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure SELinux State is Enforcing",
            "remarks": "rule_set_007"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_privileged_containers",
            "remarks": "rule_set_008"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Privileged Container Use",
            "remarks": "rule_set_008"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_root_containers",
            "remarks": "rule_set_009"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Container Running As Root User",
            "remarks": "rule_set_009"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_ipc_namespace",
            "remarks": "rule_set_010"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Access to the Host IPC Namespace",
            "remarks": "rule_set_010"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_process_id_namespace",
            "remarks": "rule_set_011"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Access to the Host Process ID Namespace",
            "remarks": "rule_set_011"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_host_dir_volume_plugin",
            "remarks": "rule_set_012"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Containers Ability to use the HostDir volume plugin",
            "remarks": "rule_set_012"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_net_raw_capability",
            "remarks": "rule_set_013"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Use of the CAP_NET_RAW",
            "remarks": "rule_set_013"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_network_namespace",
            "remarks": "rule_set_014"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Access to the Host Network Namespace",
            "remarks": "rule_set_014"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "general_backup_solution_installed",
            "remarks": "rule_set_015"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "A Backup Solution Has To Be Installed",
            "remarks": "rule_set_015"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "etcd_backup",
            "remarks": "rule_set_016"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Configure Recurring Backups For etcd",
            "remarks": "rule_set_016"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "general_network_separation",
            "remarks": "rule_set_017"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Create Network Boundaries between Functional Different Nodes",
            "remarks": "rule_set_017"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "configure_network_policies",
            "remarks": "rule_set_018"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that the CNI in use supports Network Policies",
            "remarks": "rule_set_018"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "configure_network_policies_namespaces",
            "remarks": "rule_set_019"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that application Namespaces have Network Policies defined.",
            "remarks": "rule_set_019"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "project_config_and_template_network_policy",
            "remarks": "rule_set_020"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that project templates autocreate Network Policies",
            "remarks": "rule_set_020"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "accounts_unique_service_account",
            "remarks": "rule_set_021"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure Usage of Unique Service Accounts",
            "remarks": "rule_set_021"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "accounts_no_rolebindings_default_service_account",
            "remarks": "rule_set_022"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure no RoleBindings set for default Service Account",
            "remarks": "rule_set_022"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "accounts_no_clusterrolebindings_default_service_account",
            "remarks": "rule_set_023"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure no ClusterRoleBindings set for default Service Account",
            "remarks": "rule_set_023"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "rbac_wildcard_use",
            "remarks": "rule_set_024"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Minimize Wildcard Usage in Cluster and Local Roles",
            "remarks": "rule_set_024"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "accounts_restrict_service_account_tokens",
            "remarks": "rule_set_025"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Restrict Automounting of Service Account Tokens",
            "remarks": "rule_set_025"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_drop_container_capabilities",
            "remarks": "rule_set_026"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Drop Container Capabilities",
            "remarks": "rule_set_026"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_container_allowed_capabilities",
            "remarks": "rule_set_027"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Container Capabilities",
            "remarks": "rule_set_027"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_host_ports",
            "remarks": "rule_set_028"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Containers Ability to bind to privileged ports",
            "remarks": "rule_set_028"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_privilege_escalation",
            "remarks": "rule_set_029"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Containers Ability to Escalate Privileges",
            "remarks": "rule_set_029"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "liveness_readiness_probe_in_workload",
            "remarks": "rule_set_030"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that all workloads have liveness and readiness probes",
            "remarks": "rule_set_030"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "ocp_insecure_registries",
            "remarks": "rule_set_031"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Check if any insecure registry sources is configured",
            "remarks": "rule_set_031"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "ocp_insecure_allowed_registries_for_import",
            "remarks": "rule_set_032"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Check configured allowed registries for import uses secure protocol",
            "remarks": "rule_set_032"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scansettingbinding_exists",
            "remarks": "rule_set_033"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that Compliance Operator is scanning the cluster",
            "remarks": "rule_set_033"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scansettings_have_schedule",
            "remarks": "rule_set_034"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that Compliance Operator scans are running periodically",
            "remarks": "rule_set_034"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scansetting_has_autoapplyremediations",
            "remarks": "rule_set_035"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Enable AutoApplyRemediation for at least One ScanSetting",
            "remarks": "rule_set_035"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "general_node_separation",
            "remarks": "rule_set_036"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Create Boundaries between Resources using Nodes or Clusters",
            "remarks": "rule_set_036"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "configure_egress_ip_node_assignable",
            "remarks": "rule_set_037"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Check Egress IPs Assignable to Nodes",
            "remarks": "rule_set_037"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "master_taint_noschedule",
            "remarks": "rule_set_038"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify that Control Plane Nodes are not schedulable for workloads",
            "remarks": "rule_set_038"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_groupowner_kubelet_conf",
            "remarks": "rule_set_039"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify Group Who Owns The Kubelet Configuration File",
            "remarks": "rule_set_039"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_groupowner_worker_ca",
            "remarks": "rule_set_040"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify Group Who Owns the Worker Certificate Authority File",
            "remarks": "rule_set_040"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_groupowner_worker_kubeconfig",
            "remarks": "rule_set_041"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify Group Who Owns The Worker Kubeconfig File",
            "remarks": "rule_set_041"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_groupowner_worker_service",
            "remarks": "rule_set_042"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify Group Who Owns The OpenShift Node Service File",
            "remarks": "rule_set_042"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_owner_kubelet",
            "remarks": "rule_set_043"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify User Who Owns The Kubelet Configuration File",
            "remarks": "rule_set_043"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_owner_kubelet_conf",
            "remarks": "rule_set_044"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify User Who Owns The Kubelet Configuration File",
            "remarks": "rule_set_044"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_owner_worker_ca",
            "remarks": "rule_set_045"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify User Who Owns the Worker Certificate Authority File",
            "remarks": "rule_set_045"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_owner_worker_kubeconfig",
            "remarks": "rule_set_046"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify User Who Owns The Worker Kubeconfig File",
            "remarks": "rule_set_046"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_owner_worker_service",
            "remarks": "rule_set_047"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify User Who Owns The OpenShift Node Service File",
            "remarks": "rule_set_047"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_permissions_kubelet",
            "remarks": "rule_set_048"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify Permissions on The Kubelet Configuration File",
            "remarks": "rule_set_048"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_permissions_kubelet_conf",
            "remarks": "rule_set_049"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify Permissions on The Kubelet Configuration File",
            "remarks": "rule_set_049"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_permissions_worker_ca",
            "remarks": "rule_set_050"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify Permissions on the Worker Certificate Authority File",
            "remarks": "rule_set_050"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_permissions_worker_kubeconfig",
            "remarks": "rule_set_051"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify Permissions on the Worker Kubeconfig File",
            "remarks": "rule_set_051"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_permissions_worker_service",
            "remarks": "rule_set_052"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify Permissions on the OpenShift Node Service File",
            "remarks": "rule_set_052"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kubelet_configure_client_ca",
            "remarks": "rule_set_053"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kubelet - Configure the Client CA Certificate",
            "remarks": "rule_set_053"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kubelet_configure_tls_cert",
            "remarks": "rule_set_054"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure That The kubelet Client Certificate Is Correctly Set",
            "remarks": "rule_set_054"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kubelet_configure_tls_cipher_suites",
            "remarks": "rule_set_055"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that the Kubelet only makes use of Strong Cryptographic Ciphers",
            "remarks": "rule_set_055"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kubelet_configure_tls_key",
            "remarks": "rule_set_056"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure That The kubelet Server Key Is Correctly Set",
            "remarks": "rule_set_056"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kubelet_configure_tls_min_version",
            "remarks": "rule_set_057"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure Kubelet is configured with allowed TLS versions",
            "remarks": "rule_set_057"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_client_ca",
            "remarks": "rule_set_058"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Configure the Client Certificate Authority for the API Server",
            "remarks": "rule_set_058"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_kubelet_client_cert",
            "remarks": "rule_set_059"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Configure the kubelet Certificate File for the API Server",
            "remarks": "rule_set_059"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_kubelet_client_key",
            "remarks": "rule_set_060"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Configure the kubelet Certificate Key for the API Server",
            "remarks": "rule_set_060"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_https_for_kubelet_conn",
            "remarks": "rule_set_061"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that the --kubelet-https argument is set to true",
            "remarks": "rule_set_061"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_tls_cert",
            "remarks": "rule_set_062"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Configure the Certificate for the API Server",
            "remarks": "rule_set_062"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_tls_cipher_suites",
            "remarks": "rule_set_063"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Use Strong Cryptographic Ciphers on the API Server",
            "remarks": "rule_set_063"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_tls_private_key",
            "remarks": "rule_set_064"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Configure the Certificate Key for the API Server",
            "remarks": "rule_set_064"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_tls_security_profile_not_old",
            "remarks": "rule_set_065"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure APIServer is not configured with Old tlsSecurityProfile",
            "remarks": "rule_set_065"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "tls_version_check_apiserver",
            "remarks": "rule_set_066"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure TLS v1.2 is minimum for Openshift APIServer",
            "remarks": "rule_set_066"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "cluster_version_operator_exists",
            "remarks": "rule_set_067"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that Cluster Version Operator is deployed",
            "remarks": "rule_set_067"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "cluster_version_operator_verify_integrity",
            "remarks": "rule_set_068"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that Cluster Version Operator verifies integrity",
            "remarks": "rule_set_068"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_integrity_exists",
            "remarks": "rule_set_069"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that File Integrity Operator is scanning the cluster",
            "remarks": "rule_set_069"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_integrity_notification_enabled",
            "remarks": "rule_set_070"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure the notification is enabled for file integrity operator",
            "remarks": "rule_set_070"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "configure_appropriate_network_policies",
            "remarks": "rule_set_071"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure Appropriate Network Policies are Configured",
            "remarks": "rule_set_071"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "multiple_nodes_in_every_mcp",
            "remarks": "rule_set_072"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure every MachineConfigPool consists of More Than One Node",
            "remarks": "rule_set_072"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "control_plane_nodes_in_three_zones",
            "remarks": "rule_set_073"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure Control Plane / Master Nodes are Distributed Across Three Failure Zones",
            "remarks": "rule_set_073"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "worker_nodes_in_two_zones_or_more",
            "remarks": "rule_set_074"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure Worker Nodes are Distributed Across Three Failure Zones",
            "remarks": "rule_set_074"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "infra_nodes_in_two_zones_or_more",
            "remarks": "rule_set_075"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure Infrastructure Nodes are Distributed Across Three Failure Zones",
            "remarks": "rule_set_075"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "three_control_plane_nodes",
            "remarks": "rule_set_076"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure there are Three Machines in the Master MachineConfigPool",
            "remarks": "rule_set_076"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "anti_affinity_or_topology_spread_constraints_in_deployment",
            "remarks": "rule_set_077"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure Deployments have either Anti-Affinity Rules or Topology Spread Constraints",
            "remarks": "rule_set_077"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "anti_affinity_or_topology_spread_constraints_in_statefulset",
            "remarks": "rule_set_078"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure Statefulsets have either Anti-Affinity Rules or Topology Spread Constraints",
            "remarks": "rule_set_078"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kube_descheduler_operator_exists",
            "remarks": "rule_set_079"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that the Kube Descheduler operator is deployed",
            "remarks": "rule_set_079"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kube_descheduler_lifecycle_policy",
            "remarks": "rule_set_080"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that the LifecycleAndUtilization Profile for the Kube Descheduler Operator is Enabled",
            "remarks": "rule_set_080"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kube_descheduler_podlifetime",
            "remarks": "rule_set_081"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Set Pod Lifetime for the Deschedulers",
            "remarks": "rule_set_081"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "service_firewalld_enabled",
            "remarks": "rule_set_082"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify firewalld Enabled",
            "remarks": "rule_set_082"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "ocp_allowed_registries",
            "remarks": "rule_set_083"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Allowed registries are configured",
            "remarks": "rule_set_083"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "ocp_allowed_registries_for_import",
            "remarks": "rule_set_084"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Allowed registries for import are configured",
            "remarks": "rule_set_084"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "reject_unsigned_images_by_default",
            "remarks": "rule_set_085"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure the Container Runtime rejects unsigned images by default",
            "remarks": "rule_set_085"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "rbac_limit_secrets_access",
            "remarks": "rule_set_086"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Access to Kubernetes Secrets",
            "remarks": "rule_set_086"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "rbac_limit_cluster_admin",
            "remarks": "rule_set_087"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that the cluster-admin role is only used where required",
            "remarks": "rule_set_087"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "rbac_roles_defined",
            "remarks": "rule_set_088"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure roles are defined in the cluster",
            "remarks": "rule_set_088"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "rbac_cluster_roles_defined",
            "remarks": "rule_set_089"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure cluster roles are defined in the cluster",
            "remarks": "rule_set_089"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_encryption_provider_cipher",
            "remarks": "rule_set_090"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Configure the Encryption Provider Cipher",
            "remarks": "rule_set_090"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "secrets_no_environment_variables",
            "remarks": "rule_set_091"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Do Not Use Environment Variables with Secrets",
            "remarks": "rule_set_091"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "secrets_consider_external_storage",
            "remarks": "rule_set_092"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Consider external secret storage",
            "remarks": "rule_set_092"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "project_config_and_template_resource_quota",
            "remarks": "rule_set_093"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that project templates autocreate Resource Quotas",
            "remarks": "rule_set_093"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "project_template_resource_quota",
            "remarks": "rule_set_094"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that project templates autocreate Resource Quotas",
            "remarks": "rule_set_094"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "resource_requests_limits_in_daemonset",
            "remarks": "rule_set_095"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that all daemonsets has resource limits",
            "remarks": "rule_set_095"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "resource_requests_limits_in_deployment",
            "remarks": "rule_set_096"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that all deployments has resource limits",
            "remarks": "rule_set_096"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "resource_requests_limits_in_statefulset",
            "remarks": "rule_set_097"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that all statefulsets has resource limits",
            "remarks": "rule_set_097"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "resource_requests_quota",
            "remarks": "rule_set_098"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure workloads use resource requests and limits",
            "remarks": "rule_set_098"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "resource_requests_quota_cluster",
            "remarks": "rule_set_099"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure workloads use cluster resource requests and limits",
            "remarks": "rule_set_099"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "resource_requests_quota_per_project",
            "remarks": "rule_set_100"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure workloads use resource requests and limits per namespace",
            "remarks": "rule_set_100"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "configure_network_bandwidth",
            "remarks": "rule_set_101"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limiting Network Bandwidth in Pods",
            "remarks": "rule_set_101"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "sandboxed_containers_operator_exists",
            "remarks": "rule_set_102"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that Sandboxed Containers Operator exists in the cluster",
            "remarks": "rule_set_102"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "sandboxed_containers_operator_configured",
            "remarks": "rule_set_103"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that Sandboxed Containers Operator is Configured",
            "remarks": "rule_set_103"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "general_apply_scc",
            "remarks": "rule_set_104"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Apply Security Context to Your Pods and Containers",
            "remarks": "rule_set_104"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "gitops_operator_exists",
            "remarks": "rule_set_105"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that GitOps Operator is deployed",
            "remarks": "rule_set_105"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "security_profiles_operator_exists",
            "remarks": "rule_set_106"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Make sure the Security Profiles Operator is installed",
            "remarks": "rule_set_106"
          }
        ],
        "control-implementations": [
          {
            "uuid": "c155b6ad-9749-4c3d-a96d-4ebc26844714",
            "source": "trestle://profiles/ocp4-bsi_sys_1_6-standard/profile.json",
            "description": "REPLACE_ME",
            "props": [
              {
                "name": "Framework_Short_Name",
                "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal",
                "value": "bsi-node-2022"
              }
            ],
            "implemented-requirements": [
              {
                "uuid": "0fbf0ff4-3751-4f35-9f30-4418f9cb4238",
                "control-id": "sys-1.6.a1",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "This requirement must be implemented organizationally. OpenShift supports all of the goals mentioned. Comprehensive handouts are available to carry out and document the planning of container use, security and compliance, architecture and installation on OpenShift (see https://www.redhat.com/en/resources/openshift-security-guide-ebook)"
                  }
                ]
              },
              {
                "uuid": "a642be5d-83ef-4bb1-991f-8fa3fae39173",
                "control-id": "sys-1.6.a2",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "This requirement must be implemented organizationally. Through OpenShift GitOps, OpenShift technically supports this requirement with a standardized approach to deployment, change handling and deprovisioning via kustomize or Helm charts. OpenShift provides further support through operator-based applications and platform management that automates the processes of commissioning, decommissioning and updates.\nSection 4: Start, stop and monitoring is a basic function of OpenShift. It is not possible to bypass the OpenShift methods to start and stop without manually connecting to a Container Host. For monitoring purposes, OpenShift itself offers Prometheus-based monitoring. Using Advanced Cluster Security for Kubernetes (ACS), policy-based rules can also be used to monitor the containers."
                  }
                ]
              },
              {
                "uuid": "bae02129-a59f-4faa-a106-11f6e7b3d3e0",
                "control-id": "sys-1.6.a3",
                "description": "Section 1: This requirement must be implemented organizationally. Note: This requirement is actively supported by OpenShift. For example, OpenShift does not allow applications with fixed UID/GID settings as standard; on the contrary, these IDs are assigned dynamically (security-by-design). The behavior can be adjusted by administrators, for example for system tasks.\nSection 2: This requirement must be implemented organizationally. Note: OpenShift supports the requirements through strict client separation based on a “Project” (an extension to the Kubernetes namespace). The containers are separated from each other and from the host system via cgroups using SELinux. As long as all applications run “restricted” in the Security Context Constraint (SCC), OpenShift maintains strict client separation.\nSection 3: This requirement must be implemented organizationally. OpenShift supports this requirement by leveraging SELinux with its cgroups to create the container sandbox.\nSection 4: This requirement must be implemented organizationally.\nSection 5: This requirement must be implemented organizationally. Note: OpenShift supports different network infrastructures via the CNI plugin interface (e.g. OVN-Kubernetes, OpenShift-SDN, hardware networks etc.) OVN-Kubernetes, hardware networks etc.) The underlying network is abstracted by the network model in Openshift and usage is consistent across containers. This allows OpenShift to uniformly implement network security features such as: Firewall rules over network policies.\nSection 6: This requirement must be implemented organizationally. Note: OpenShift provides fine-grained metrics for external capacity management via monitoring.\nSection 7: OpenShift offers automated checks for the availability and health of an application. If the LivenessProbe (Health) repeatedly receives a negative result or is not reachable, the affected pod with the container is restarted. Using ReadinessProbe, a container can control whether it is ready to accept HTTP(S) based requests or not. Note: Monitoring is considered in APP.4.4.A11.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_namespace_separation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_node_separation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_network_separation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "coreos_enable_selinux_kernel_argument"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "selinux_state"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "selinux_policytype"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "liveness_readiness_probe_in_workload"
                  }
                ]
              },
              {
                "uuid": "86fde939-33bf-4c4b-a3e8-d691a892d8a6",
                "control-id": "sys-1.6.a4",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "This requirement must be implemented organizationally. Note: OpenShift supports the requirement through the built-in functionalities and enables the highest possible level of automation. On the one hand, CI/CD tools are delivered with OpenShift pipelines and integrated into the platform. On the other hand, pre-configured build processes based on Red Hat experience are available that are based on Source2Image and thus support planning. The built-in registry allows you to store images and other associated information, such as Helm charts or SBOMs. The abstractions available in Openshift allow the entire image distribution process to be documented and controlled as code. This further allows the image distribution process to be managed via OpenShift GitOps."
                  }
                ]
              },
              {
                "uuid": "89a7192c-1756-4230-abe9-050b3d5726b1",
                "control-id": "sys-1.6.a5",
                "description": "Section 1: Hosts and containers are controlled via the Kubernetes API. This is addressed via api. The load balancer used for this is located in the administration network. The load balancer for *.apps. is set up separately in the active network. This means that the administration is appropriately separated. The Console (the OpenShift web UI) is used by all users. Authorization takes place at the API level and is secured via RBAC. The control plane is to be located in an administration network.\nSection 2: The web UI can be configured on another router that is terminated on the administration load balancer and is therefore only accessible from the administration network. This means that it can no longer be reached from the active network.\nSection 3: This is a standard OpenShift feature. The OpenShift documentation contains the necessary communication paths between control plane, infrastructure and worker nodes, as well as the necessary firewall activations of the underlying network stack at hardware or IaaS level. The communication between containers or pods within a client (“Project”) is not restricted by default, but can be regulated with micro-segmentation if necessary or as a service mesh with mTLS authentication be implemented (see APP.4.4.A18).\nExternally exposed services can receive their own IP and thus data traffic can also be separated outside the platform. Inter-node communication is carried out via suitable tunnel protocols (VXLAN, GENEVE) and can also be encrypted using IPSec.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_network_separation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "configure_network_policies"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "configure_network_policies_namespaces"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "service_firewalld_enabled"
                  }
                ]
              },
              {
                "uuid": "7f49c4b8-f9d9-42bd-b84f-75dcc94f375c",
                "control-id": "sys-1.6.a6",
                "description": "Section 1: This requirement must be implemented organizationally. Note: OpenShift supports the requirement by allowing only certain sources. This allows the sources from which images come to be restricted and new sources to be added in a controlled process. Quay can also be used to provide your own registry in an open environment as a trustworthy delivery point for external software. Images can also be checked for vulnerabilities here.\nSection 2: This requirement must be implemented organizationally. Note: OpenShift makes it possible to verify the signatures of images before use and thus enforce the identification requirement. Red Hat Advanced Cluster Security for Kubernetes (ACS) can check and optionally enforce signatures as well as certain labels (e.g. MAINTAINER) for images. For images delivered by Red Hat via the official Red Hat Registry, the MAINTAINER label of the container images is always maintained, through which Red Hat can be identified as the creator of the images. Images are also signed with GPG keys.\nSection 3: This requirement must be implemented organizationally. Note: Images from the Red Hat Registry are regularly checked for security vulnerabilities and updated accordingly. The security status of the images is indicated via a health indicator. ACS can perform technical checks through regular scans and report conspicuous containers or containers with identified vulnerabilities, thereby supporting the implementation of the requirement.\nSection 4: This requirement must be implemented organizationally. Note: For discontinued images with appropriate identification (e.g. through labels), policies implemented in ACS can report these violations. ACS also provides policies that report when images have not been scanned for more than 30/60/90 days. However, this means that an image must be built and rolled out at this interval so that the scans during the build process are effective. With a CI/CD pipeline with a high level of automation, this usually does not represent any increased effort.\nSection 5: This requirement must be implemented organizationally. Note: Image-level labels or image tags could be used here.\nSection 6: This requirement must be implemented organizationally for integrated software or self-created software. Note: OpenShift supports Lifecycle Management (OLM) with Operator. Software managed using OLM or Cluster Operator receives updates via the Operator Hub or Cluster Updates. An automated check with automatic or alternatively manual release is possible for this software.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_allowed_registries"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_allowed_registries_for_import"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_insecure_allowed_registries_for_import"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_insecure_registries"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "reject_unsigned_images_by_default"
                  }
                ]
              },
              {
                "uuid": "2c2bb554-b2da-4c2a-b202-82d5752a7dc7",
                "control-id": "sys-1.6.a7",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "OpenShift Logging stores the containers' logging data in a separate log management system. The output of the container is saved as long as it is on STDOUT and STDERR. The logging data can also be forwarded to different log storage depending on the source (e.g. infrastructure or application). It is the responsibility of the applications to write log output to STDOUT and errors to STDERR."
                  }
                ]
              },
              {
                "uuid": "50d5ecb8-72f5-4921-931b-639026306fac",
                "control-id": "sys-1.6.a8",
                "description": "Section 1: OpenShift offers secrets that are only available to the containers and the people authorized via RBAC in the tenant or project (client). Section 2: This requirement must be enforced as part of application development. OpenShift offers suitable mechanisms (secrets) with encryption of the etcd store if necessary. Section 3: OpenShift offers corresponding mechanisms (secrets). Unless the secrets are dynamically generated, third-party/community tools such as SealedSecrets or HashiCorp Vault can help securely deploy the secrets. Section 4: This requirement must be implemented organizationally. All of this information can and should be managed in Secrets.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_least_privilege"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_limit_secrets_access"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_limit_cluster_admin"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_wildcard_use"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_roles_defined"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_cluster_roles_defined"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "api_server_encryption_provider_cipher"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "secrets_no_environment_variables"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "secrets_consider_external_storage"
                  }
                ]
              },
              {
                "uuid": "5ffc12d0-3bc7-46cb-9f7d-0a0f52c88f3f",
                "control-id": "sys-1.6.a9",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "Section 1: This requirement must be implemented organizationally. Section 2: This requirement must be implemented organizationally and be part of the application development process. Section 3: This requirement must be implemented organizationally and suppliers must be contractually obliged to comply."
                  }
                ]
              },
              {
                "uuid": "3bd1332b-9120-4794-9f37-4b24b5fa5a7f",
                "control-id": "sys-1.6.a10",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "These requirements must be implemented organizationally."
                  }
                ]
              },
              {
                "uuid": "8aaf32a4-204f-402f-a796-46772a5d99ef",
                "control-id": "sys-1.6.a11",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "This requirement must be implemented organizationally."
                  }
                ]
              },
              {
                "uuid": "e26def69-48c3-4dbf-a300-77ee58632dc0",
                "control-id": "sys-1.6.a12",
                "description": "Section 1: The source of images can be restricted by configuring the allowed registries. In addition, this requirement must be implemented organizationally. Section 2: This requirement must be implemented organizationally. Section 3: This requirement is solved using image labels. Red Hat Images contain the labels io.k8s.description, summary, vender, version, url, vcs-ref and vcs-type, through which the delivered images are transparent in their function and history. For internal images, the existence of the labels can be ensured during application development. The existence of the corresponding labels can be ensured via ACS. Section 4: OpenShift can be configured to assign a digital signature to each approved registry. OpenShift then only executes images from this registry that are secured using this signature.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "partial"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_allowed_registries"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_allowed_registries_for_import"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "reject_unsigned_images_by_default"
                  }
                ]
              },
              {
                "uuid": "c6628e5a-f554-4540-8a73-115427776f5a",
                "control-id": "sys-1.6.a13",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "This requirement must be solved organizationally. Note: OpenShift offers various CI/CD solutions that can be used for automation. OpenShift Pipelines (Tekton-based) and traditional Jenkins are available directly in OpenShift. If the user uses gitlab-ci or github Actions, the runners can be executed in OpenShift. If the release process contains specific artifacts such as if you require SBOMs or the ability to statically analyze Dockerfiles, Quay and ACS can provide the necessary functionality."
                  }
                ]
              },
              {
                "uuid": "ff95b295-4a49-4f78-aeb5-4979cc1c9d65",
                "control-id": "sys-1.6.a14",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "Section 1: This requirement must be solved organizationally. Best practices use multiple environments (either separate clusters or multiple namespaces on a cluster) to support this process and enable automated testing (e.g. via OpenShift Pipelines or Jenkins ). Section 2: “Persistent” containers contradict the cloud native principle and do not represent “good practice”. There is also a contradiction with APP.4.4.A21 “Regular restart of pods”. Accordingly, OpenShift does not support updates at the container level. Changes to the container image always result in the pod stopping and a new pod being restarted. With the recommended use of GitOps, this is a reprovisioning of the changed elements and also documents the status of the application at a given point in time. Due to the high level of automation, this usually does not represent any increased effort."
                  }
                ]
              },
              {
                "uuid": "60529469-fff4-4e04-b6ed-4b81662fab17",
                "control-id": "sys-1.6.a15",
                "description": "Section 1: OpenShift supports the configuration of quotas for a project (client). Applications can have their resources appropriately limited using limits/requests. Network bandwidth is limited at the pod level and can be determined separately according to incoming and outgoing network bandwidth. In addition, outgoing traffic (egress) can be marked at the namespace level with differentiated services code point (DSCP) classifications in order to assign quality of service classes to the outgoing packets in the physical network. Section 2: This requirement must be implemented organizationally. Note: The behavior of OpenShift completely replicates the standard behavior of Kubernetes. If CPU limits are exceeded, the process is slowed down. If volatile memory is exceeded, the process is stopped and restarted by the scheduler. The persistent memory management is responsible for exceeding the persistent memory - OpenShift will not enforce or limit anything here. Compliance with the limited network bandwidth is enforced by dropping packets that exceed the limit.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "project_config_and_template_resource_quota"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "project_template_resource_quota"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "resource_requests_limits_in_daemonset"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "resource_requests_limits_in_deployment"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "resource_requests_limits_in_statefulset"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "resource_requests_quota"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "resource_requests_quota_cluster"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "resource_requests_quota_per_project"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "configure_network_bandwidth"
                  }
                ]
              },
              {
                "uuid": "65c45bfb-c3a0-408e-b3f6-9388cf107b66",
                "control-id": "sys-1.6.a16",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "Section 1: Application containers can only access administrative services remotely. Privileged containers can gain access to the host, the host's file system, or the host's network. This is necessary, for example, for the infrastructure services of OpenShift (ingress router). Normal applications (application containers) may not receive such permissions.\nSection 2: This requirement must be partially implemented organizationally and should be part of the guideline defined in SYS.1.6.A10. There may be exceptions for applications that should/need to make configurations to Kubernetes resources. This means they have administrative remote access to the corresponding Kubernetes resources. Remote access is controlled by Kubernetes and backup takes place via the Kubernetes functionalities (see module APP.4.4). The operating system including Mandatory Access Control is optimized as a runtime environment for Kubernetes. In general, it is possible to limit the provision/post-installation of remote access programs in the container. Also the container runtime security tools can detect, alert and remediate, if remote access daemon processes such as SSHD are running in a container.\nSection 3: This requirement should also be included in the policy described in SYS.1.6.A10. OpenShift only allows access to the configured ports. A container that provides remote maintenance access to these ports may not be released. Application containers should be administered exclusively via the container runtime. Using a policy, known remote access ports (e.g. 22, RDP, etc.) can be reported via ACS and their use prevented.\nSection 4: This is standard in OpenShift environments. OpenShift offers a terminal login via the oc administration tool. Communication runs via the control plane to the container and is both authenticated and authorized."
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_drop_container_capabilities"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_container_allowed_capabilities"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_host_dir_volume_plugin"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_host_ports"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_ipc_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_net_raw_capability"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_network_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_privilege_escalation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_privileged_containers"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_process_id_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_root_containers"
                  }
                ]
              },
              {
                "uuid": "bd61f1be-1fc3-472c-b312-3c1bf3291ef8",
                "control-id": "sys-1.6.a17",
                "description": "Section 1: With OpenShift, application containers run in the Security Context Constraint (SCC) “restricted” by default. Section 2: OpenShift supports encapsulation by using SELinux. If necessary, entire nodes can also be encapsulated via underlying virtualization. This is always necessary when application containers require extended security context constraints (SCCs). With the sandbox function based on Kata Containers, OpenShift provides a convenient way to isolate containers using virtualization technology. Section 3: OpenShift offers several SCC to restrict access to the network, file system or the host itself. This should only be allowed for administrative applications such as SIEM scanners or other infrastructure services that require access to the host. These SCCs should never be given to application containers. Section 4: These exceptions must be documented in the operational documentation. A list of pods with the corresponding SCC annotation can serve as the basis for the documentation.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "partial"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_drop_container_capabilities"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_container_allowed_capabilities"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_host_dir_volume_plugin"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_host_ports"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_ipc_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_net_raw_capability"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_network_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_privilege_escalation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_privileged_containers"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_process_id_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_root_containers"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "sandboxed_containers_operator_exists"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "sandboxed_containers_operator_configured"
                  }
                ]
              },
              {
                "uuid": "3b9e81af-ed99-4ad0-8538-12b398f80393",
                "control-id": "sys-1.6.a18",
                "description": "Section 1: With OpenShift, accounts within the container are separated from the host system by SELinux. This includes preventing the use of privileged user and group IDs as well as corresponding rights extensions (SET-UID, Set-GID bit). A range of UIDs/GIDs is provided for use in containers.\nSection 2: Security Context Constraints (SCCs) allow accounts in the container to gain controlled access.\nSection 3: The host system Red Hat CoreOS is immutable. The changes to the host operating system should only be made by OpenShift and should be necessary so that hardening by Red Hat is not inadvertently undermined. Since, in contrast to an unprotected container runtime environment, SELinux enforces the separation between the container runtime and the operating system, this mirroring of account names is not necessary.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "coreos_enable_selinux_kernel_argument"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "selinux_policytype"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "selinux_state"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_apply_scc"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_privileged_containers"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_root_containers"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_ipc_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_process_id_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_host_dir_volume_plugin"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_net_raw_capability"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_network_namespace"
                  }
                ]
              },
              {
                "uuid": "ac3003f9-1e77-4529-aaa0-0f63d62fad86",
                "control-id": "sys-1.6.a19",
                "description": "Section 1: Applications can access persistent volumes (PVs) and temporary (ephemeral) storage in OpenShift. Persisted volumes are connected as network storage, ephemeral storage serves primarily as volatile, short-lived mass storage and is allocated within the container file system. This configures which PV can be reached and the use of the ephemeral storage is separated per pod. This means that each pod has its own volatile mass storage. Volumes can be limited in size.\nSection 2: OpenShift implements the principle of least privileges. The definition is made via an explicit configuration at the deployment level.\nSection 3: By default, no local storage is included. For reasons of reliability, this is explicitly not recommended.\nSection 4: The network storage dictates the permissions. OpenShift supports this with the dynamically assigned UID/GID of the projects (clients).",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_host_dir_volume_plugin"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_least_privilege"
                  }
                ]
              },
              {
                "uuid": "0a23e493-7fcf-4774-9ac7-5b0ecca56686",
                "control-id": "sys-1.6.a20",
                "description": "Section 1: OpenShift only maintains the current version of the configuration. It is therefore recommended to use GitOps, in which the configuration is transferred from a git repository to the OpenShift cluster. OpenShift includes OpenShift GitOps (based on the community project ArgoCD), which supports easy implementation of a GitOps-based administration concept.\nSection 2: With a GitOps approach, all changes are documented in git.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "gitops_operator_exists"
                  }
                ]
              },
              {
                "uuid": "93a99ed1-a6e2-44f5-b7c3-02b81918ff42",
                "control-id": "sys-1.6.a1",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "This requirement must be implemented organizationally. OpenShift supports all of the goals mentioned. Comprehensive handouts are available to carry out and document the planning of container use, security and compliance, architecture and installation on OpenShift (see https://www.redhat.com/en/resources/openshift-security-guide-ebook)"
                  }
                ]
              },
              {
                "uuid": "5ed1c6a8-9c78-47a6-8edb-73df38a0bb10",
                "control-id": "sys-1.6.a2",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "This requirement must be implemented organizationally. Through OpenShift GitOps, OpenShift technically supports this requirement with a standardized approach to deployment, change handling and deprovisioning via kustomize or Helm charts. OpenShift provides further support through operator-based applications and platform management that automates the processes of commissioning, decommissioning and updates.\nSection 4: Start, stop and monitoring is a basic function of OpenShift. It is not possible to bypass the OpenShift methods to start and stop without manually connecting to a Container Host. For monitoring purposes, OpenShift itself offers Prometheus-based monitoring. Using Advanced Cluster Security for Kubernetes (ACS), policy-based rules can also be used to monitor the containers."
                  }
                ]
              },
              {
                "uuid": "ed83d3bb-03bf-45cf-915d-b90c59d63153",
                "control-id": "sys-1.6.a3",
                "description": "Section 1: This requirement must be implemented organizationally. Note: This requirement is actively supported by OpenShift. For example, OpenShift does not allow applications with fixed UID/GID settings as standard; on the contrary, these IDs are assigned dynamically (security-by-design). The behavior can be adjusted by administrators, for example for system tasks.\nSection 2: This requirement must be implemented organizationally. Note: OpenShift supports the requirements through strict client separation based on a “Project” (an extension to the Kubernetes namespace). The containers are separated from each other and from the host system via cgroups using SELinux. As long as all applications run “restricted” in the Security Context Constraint (SCC), OpenShift maintains strict client separation.\nSection 3: This requirement must be implemented organizationally. OpenShift supports this requirement by leveraging SELinux with its cgroups to create the container sandbox.\nSection 4: This requirement must be implemented organizationally.\nSection 5: This requirement must be implemented organizationally. Note: OpenShift supports different network infrastructures via the CNI plugin interface (e.g. OVN-Kubernetes, OpenShift-SDN, hardware networks etc.) OVN-Kubernetes, hardware networks etc.) The underlying network is abstracted by the network model in Openshift and usage is consistent across containers. This allows OpenShift to uniformly implement network security features such as: Firewall rules over network policies.\nSection 6: This requirement must be implemented organizationally. Note: OpenShift provides fine-grained metrics for external capacity management via monitoring.\nSection 7: OpenShift offers automated checks for the availability and health of an application. If the LivenessProbe (Health) repeatedly receives a negative result or is not reachable, the affected pod with the container is restarted. Using ReadinessProbe, a container can control whether it is ready to accept HTTP(S) based requests or not. Note: Monitoring is considered in APP.4.4.A11.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_namespace_separation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_node_separation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_network_separation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "coreos_enable_selinux_kernel_argument"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "selinux_state"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "selinux_policytype"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "liveness_readiness_probe_in_workload"
                  }
                ]
              },
              {
                "uuid": "dd51b523-2d34-4fb7-9714-b986c99dad03",
                "control-id": "sys-1.6.a4",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "This requirement must be implemented organizationally. Note: OpenShift supports the requirement through the built-in functionalities and enables the highest possible level of automation. On the one hand, CI/CD tools are delivered with OpenShift pipelines and integrated into the platform. On the other hand, pre-configured build processes based on Red Hat experience are available that are based on Source2Image and thus support planning. The built-in registry allows you to store images and other associated information, such as Helm charts or SBOMs. The abstractions available in Openshift allow the entire image distribution process to be documented and controlled as code. This further allows the image distribution process to be managed via OpenShift GitOps."
                  }
                ]
              },
              {
                "uuid": "f5637f27-f288-42f9-943a-5e433de8718b",
                "control-id": "sys-1.6.a5",
                "description": "Section 1: Hosts and containers are controlled via the Kubernetes API. This is addressed via api. The load balancer used for this is located in the administration network. The load balancer for *.apps. is set up separately in the active network. This means that the administration is appropriately separated. The Console (the OpenShift web UI) is used by all users. Authorization takes place at the API level and is secured via RBAC. The control plane is to be located in an administration network.\nSection 2: The web UI can be configured on another router that is terminated on the administration load balancer and is therefore only accessible from the administration network. This means that it can no longer be reached from the active network.\nSection 3: This is a standard OpenShift feature. The OpenShift documentation contains the necessary communication paths between control plane, infrastructure and worker nodes, as well as the necessary firewall activations of the underlying network stack at hardware or IaaS level. The communication between containers or pods within a client (“Project”) is not restricted by default, but can be regulated with micro-segmentation if necessary or as a service mesh with mTLS authentication be implemented (see APP.4.4.A18).\nExternally exposed services can receive their own IP and thus data traffic can also be separated outside the platform. Inter-node communication is carried out via suitable tunnel protocols (VXLAN, GENEVE) and can also be encrypted using IPSec.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_network_separation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "configure_network_policies"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "configure_network_policies_namespaces"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "service_firewalld_enabled"
                  }
                ]
              },
              {
                "uuid": "9f86a317-9473-418f-8ae7-a0d5f13fbf89",
                "control-id": "sys-1.6.a6",
                "description": "Section 1: This requirement must be implemented organizationally. Note: OpenShift supports the requirement by allowing only certain sources. This allows the sources from which images come to be restricted and new sources to be added in a controlled process. Quay can also be used to provide your own registry in an open environment as a trustworthy delivery point for external software. Images can also be checked for vulnerabilities here.\nSection 2: This requirement must be implemented organizationally. Note: OpenShift makes it possible to verify the signatures of images before use and thus enforce the identification requirement. Red Hat Advanced Cluster Security for Kubernetes (ACS) can check and optionally enforce signatures as well as certain labels (e.g. MAINTAINER) for images. For images delivered by Red Hat via the official Red Hat Registry, the MAINTAINER label of the container images is always maintained, through which Red Hat can be identified as the creator of the images. Images are also signed with GPG keys.\nSection 3: This requirement must be implemented organizationally. Note: Images from the Red Hat Registry are regularly checked for security vulnerabilities and updated accordingly. The security status of the images is indicated via a health indicator. ACS can perform technical checks through regular scans and report conspicuous containers or containers with identified vulnerabilities, thereby supporting the implementation of the requirement.\nSection 4: This requirement must be implemented organizationally. Note: For discontinued images with appropriate identification (e.g. through labels), policies implemented in ACS can report these violations. ACS also provides policies that report when images have not been scanned for more than 30/60/90 days. However, this means that an image must be built and rolled out at this interval so that the scans during the build process are effective. With a CI/CD pipeline with a high level of automation, this usually does not represent any increased effort.\nSection 5: This requirement must be implemented organizationally. Note: Image-level labels or image tags could be used here.\nSection 6: This requirement must be implemented organizationally for integrated software or self-created software. Note: OpenShift supports Lifecycle Management (OLM) with Operator. Software managed using OLM or Cluster Operator receives updates via the Operator Hub or Cluster Updates. An automated check with automatic or alternatively manual release is possible for this software.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_allowed_registries"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_allowed_registries_for_import"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_insecure_allowed_registries_for_import"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_insecure_registries"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "reject_unsigned_images_by_default"
                  }
                ]
              },
              {
                "uuid": "a0e55cba-8b92-4344-8f36-fce83c524e04",
                "control-id": "sys-1.6.a7",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "OpenShift Logging stores the containers' logging data in a separate log management system. The output of the container is saved as long as it is on STDOUT and STDERR. The logging data can also be forwarded to different log storage depending on the source (e.g. infrastructure or application). It is the responsibility of the applications to write log output to STDOUT and errors to STDERR."
                  }
                ]
              },
              {
                "uuid": "14806965-6760-4b3d-8f0d-2b25d314d62a",
                "control-id": "sys-1.6.a8",
                "description": "Section 1: OpenShift offers secrets that are only available to the containers and the people authorized via RBAC in the tenant or project (client). Section 2: This requirement must be enforced as part of application development. OpenShift offers suitable mechanisms (secrets) with encryption of the etcd store if necessary. Section 3: OpenShift offers corresponding mechanisms (secrets). Unless the secrets are dynamically generated, third-party/community tools such as SealedSecrets or HashiCorp Vault can help securely deploy the secrets. Section 4: This requirement must be implemented organizationally. All of this information can and should be managed in Secrets.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_least_privilege"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_limit_secrets_access"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_limit_cluster_admin"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_wildcard_use"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_roles_defined"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_cluster_roles_defined"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "api_server_encryption_provider_cipher"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "secrets_no_environment_variables"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "secrets_consider_external_storage"
                  }
                ]
              },
              {
                "uuid": "05f9ce25-2c8a-4c6f-8c06-61bc1010c6e2",
                "control-id": "sys-1.6.a9",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "Section 1: This requirement must be implemented organizationally. Section 2: This requirement must be implemented organizationally and be part of the application development process. Section 3: This requirement must be implemented organizationally and suppliers must be contractually obliged to comply."
                  }
                ]
              },
              {
                "uuid": "26ba9933-8a44-414d-ab03-8745b58d6341",
                "control-id": "sys-1.6.a10",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "These requirements must be implemented organizationally."
                  }
                ]
              },
              {
                "uuid": "5e8ad62b-6287-4870-b0d0-18f2044955dc",
                "control-id": "sys-1.6.a11",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "This requirement must be implemented organizationally."
                  }
                ]
              },
              {
                "uuid": "be98fcfb-2a55-4589-b81d-fa0e7c3d85ea",
                "control-id": "sys-1.6.a12",
                "description": "Section 1: The source of images can be restricted by configuring the allowed registries. In addition, this requirement must be implemented organizationally. Section 2: This requirement must be implemented organizationally. Section 3: This requirement is solved using image labels. Red Hat Images contain the labels io.k8s.description, summary, vender, version, url, vcs-ref and vcs-type, through which the delivered images are transparent in their function and history. For internal images, the existence of the labels can be ensured during application development. The existence of the corresponding labels can be ensured via ACS. Section 4: OpenShift can be configured to assign a digital signature to each approved registry. OpenShift then only executes images from this registry that are secured using this signature.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "partial"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_allowed_registries"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_allowed_registries_for_import"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "reject_unsigned_images_by_default"
                  }
                ]
              },
              {
                "uuid": "fc9f9901-459a-4152-b9a5-727a8eac08aa",
                "control-id": "sys-1.6.a13",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "This requirement must be solved organizationally. Note: OpenShift offers various CI/CD solutions that can be used for automation. OpenShift Pipelines (Tekton-based) and traditional Jenkins are available directly in OpenShift. If the user uses gitlab-ci or github Actions, the runners can be executed in OpenShift. If the release process contains specific artifacts such as if you require SBOMs or the ability to statically analyze Dockerfiles, Quay and ACS can provide the necessary functionality."
                  }
                ]
              },
              {
                "uuid": "a4457cb0-8adc-4d38-bf45-5d5a014cbe19",
                "control-id": "sys-1.6.a14",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "Section 1: This requirement must be solved organizationally. Best practices use multiple environments (either separate clusters or multiple namespaces on a cluster) to support this process and enable automated testing (e.g. via OpenShift Pipelines or Jenkins ). Section 2: “Persistent” containers contradict the cloud native principle and do not represent “good practice”. There is also a contradiction with APP.4.4.A21 “Regular restart of pods”. Accordingly, OpenShift does not support updates at the container level. Changes to the container image always result in the pod stopping and a new pod being restarted. With the recommended use of GitOps, this is a reprovisioning of the changed elements and also documents the status of the application at a given point in time. Due to the high level of automation, this usually does not represent any increased effort."
                  }
                ]
              },
              {
                "uuid": "e5ebab0b-641d-475d-8818-0daacb8d5f99",
                "control-id": "sys-1.6.a15",
                "description": "Section 1: OpenShift supports the configuration of quotas for a project (client). Applications can have their resources appropriately limited using limits/requests. Network bandwidth is limited at the pod level and can be determined separately according to incoming and outgoing network bandwidth. In addition, outgoing traffic (egress) can be marked at the namespace level with differentiated services code point (DSCP) classifications in order to assign quality of service classes to the outgoing packets in the physical network. Section 2: This requirement must be implemented organizationally. Note: The behavior of OpenShift completely replicates the standard behavior of Kubernetes. If CPU limits are exceeded, the process is slowed down. If volatile memory is exceeded, the process is stopped and restarted by the scheduler. The persistent memory management is responsible for exceeding the persistent memory - OpenShift will not enforce or limit anything here. Compliance with the limited network bandwidth is enforced by dropping packets that exceed the limit.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "project_config_and_template_resource_quota"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "project_template_resource_quota"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "resource_requests_limits_in_daemonset"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "resource_requests_limits_in_deployment"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "resource_requests_limits_in_statefulset"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "resource_requests_quota"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "resource_requests_quota_cluster"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "resource_requests_quota_per_project"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "configure_network_bandwidth"
                  }
                ]
              },
              {
                "uuid": "db2eeec7-0454-44c1-8c29-2c11cd4b771e",
                "control-id": "sys-1.6.a16",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "Section 1: Application containers can only access administrative services remotely. Privileged containers can gain access to the host, the host's file system, or the host's network. This is necessary, for example, for the infrastructure services of OpenShift (ingress router). Normal applications (application containers) may not receive such permissions.\nSection 2: This requirement must be partially implemented organizationally and should be part of the guideline defined in SYS.1.6.A10. There may be exceptions for applications that should/need to make configurations to Kubernetes resources. This means they have administrative remote access to the corresponding Kubernetes resources. Remote access is controlled by Kubernetes and backup takes place via the Kubernetes functionalities (see module APP.4.4). The operating system including Mandatory Access Control is optimized as a runtime environment for Kubernetes. In general, it is possible to limit the provision/post-installation of remote access programs in the container. Also the container runtime security tools can detect, alert and remediate, if remote access daemon processes such as SSHD are running in a container.\nSection 3: This requirement should also be included in the policy described in SYS.1.6.A10. OpenShift only allows access to the configured ports. A container that provides remote maintenance access to these ports may not be released. Application containers should be administered exclusively via the container runtime. Using a policy, known remote access ports (e.g. 22, RDP, etc.) can be reported via ACS and their use prevented.\nSection 4: This is standard in OpenShift environments. OpenShift offers a terminal login via the oc administration tool. Communication runs via the control plane to the container and is both authenticated and authorized."
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_drop_container_capabilities"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_container_allowed_capabilities"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_host_dir_volume_plugin"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_host_ports"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_ipc_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_net_raw_capability"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_network_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_privilege_escalation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_privileged_containers"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_process_id_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_root_containers"
                  }
                ]
              },
              {
                "uuid": "75ab8395-37e3-41b0-92e5-bd8dc24ad465",
                "control-id": "sys-1.6.a17",
                "description": "Section 1: With OpenShift, application containers run in the Security Context Constraint (SCC) “restricted” by default. Section 2: OpenShift supports encapsulation by using SELinux. If necessary, entire nodes can also be encapsulated via underlying virtualization. This is always necessary when application containers require extended security context constraints (SCCs). With the sandbox function based on Kata Containers, OpenShift provides a convenient way to isolate containers using virtualization technology. Section 3: OpenShift offers several SCC to restrict access to the network, file system or the host itself. This should only be allowed for administrative applications such as SIEM scanners or other infrastructure services that require access to the host. These SCCs should never be given to application containers. Section 4: These exceptions must be documented in the operational documentation. A list of pods with the corresponding SCC annotation can serve as the basis for the documentation.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "partial"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_drop_container_capabilities"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_container_allowed_capabilities"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_host_dir_volume_plugin"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_host_ports"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_ipc_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_net_raw_capability"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_network_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_privilege_escalation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_privileged_containers"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_process_id_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_root_containers"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "sandboxed_containers_operator_exists"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "sandboxed_containers_operator_configured"
                  }
                ]
              },
              {
                "uuid": "18732542-54d1-4b70-8218-2926ac063c36",
                "control-id": "sys-1.6.a18",
                "description": "Section 1: With OpenShift, accounts within the container are separated from the host system by SELinux. This includes preventing the use of privileged user and group IDs as well as corresponding rights extensions (SET-UID, Set-GID bit). A range of UIDs/GIDs is provided for use in containers.\nSection 2: Security Context Constraints (SCCs) allow accounts in the container to gain controlled access.\nSection 3: The host system Red Hat CoreOS is immutable. The changes to the host operating system should only be made by OpenShift and should be necessary so that hardening by Red Hat is not inadvertently undermined. Since, in contrast to an unprotected container runtime environment, SELinux enforces the separation between the container runtime and the operating system, this mirroring of account names is not necessary.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "coreos_enable_selinux_kernel_argument"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "selinux_policytype"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "selinux_state"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_apply_scc"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_privileged_containers"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_root_containers"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_ipc_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_process_id_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_host_dir_volume_plugin"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_net_raw_capability"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_network_namespace"
                  }
                ]
              },
              {
                "uuid": "b153464f-5c91-4813-b2d8-b78bad5dcc3e",
                "control-id": "sys-1.6.a19",
                "description": "Section 1: Applications can access persistent volumes (PVs) and temporary (ephemeral) storage in OpenShift. Persisted volumes are connected as network storage, ephemeral storage serves primarily as volatile, short-lived mass storage and is allocated within the container file system. This configures which PV can be reached and the use of the ephemeral storage is separated per pod. This means that each pod has its own volatile mass storage. Volumes can be limited in size.\nSection 2: OpenShift implements the principle of least privileges. The definition is made via an explicit configuration at the deployment level.\nSection 3: By default, no local storage is included. For reasons of reliability, this is explicitly not recommended.\nSection 4: The network storage dictates the permissions. OpenShift supports this with the dynamically assigned UID/GID of the projects (clients).",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_host_dir_volume_plugin"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_least_privilege"
                  }
                ]
              },
              {
                "uuid": "51a0a688-8a5c-4d59-a5bc-99e21f3dc520",
                "control-id": "sys-1.6.a20",
                "description": "Section 1: OpenShift only maintains the current version of the configuration. It is therefore recommended to use GitOps, in which the configuration is transferred from a git repository to the OpenShift cluster. OpenShift includes OpenShift GitOps (based on the community project ArgoCD), which supports easy implementation of a GitOps-based administration concept.\nSection 2: With a GitOps approach, all changes are documented in git.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "gitops_operator_exists"
                  }
                ]
              },
              {
                "uuid": "55860286-ab2b-4a24-8b4c-a2bafe51e7a4",
                "control-id": "sys-1.6.a1",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "This requirement must be implemented organizationally. OpenShift supports all of the goals mentioned. Comprehensive handouts are available to carry out and document the planning of container use, security and compliance, architecture and installation on OpenShift (see https://www.redhat.com/en/resources/openshift-security-guide-ebook)"
                  }
                ]
              },
              {
                "uuid": "d87c0f85-3bbd-4abb-ad24-f261e8647885",
                "control-id": "sys-1.6.a2",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "This requirement must be implemented organizationally. Through OpenShift GitOps, OpenShift technically supports this requirement with a standardized approach to deployment, change handling and deprovisioning via kustomize or Helm charts. OpenShift provides further support through operator-based applications and platform management that automates the processes of commissioning, decommissioning and updates.\nSection 4: Start, stop and monitoring is a basic function of OpenShift. It is not possible to bypass the OpenShift methods to start and stop without manually connecting to a Container Host. For monitoring purposes, OpenShift itself offers Prometheus-based monitoring. Using Advanced Cluster Security for Kubernetes (ACS), policy-based rules can also be used to monitor the containers."
                  }
                ]
              },
              {
                "uuid": "f3daea1d-3201-488d-b7de-c9cfa59b570a",
                "control-id": "sys-1.6.a3",
                "description": "Section 1: This requirement must be implemented organizationally. Note: This requirement is actively supported by OpenShift. For example, OpenShift does not allow applications with fixed UID/GID settings as standard; on the contrary, these IDs are assigned dynamically (security-by-design). The behavior can be adjusted by administrators, for example for system tasks.\nSection 2: This requirement must be implemented organizationally. Note: OpenShift supports the requirements through strict client separation based on a “Project” (an extension to the Kubernetes namespace). The containers are separated from each other and from the host system via cgroups using SELinux. As long as all applications run “restricted” in the Security Context Constraint (SCC), OpenShift maintains strict client separation.\nSection 3: This requirement must be implemented organizationally. OpenShift supports this requirement by leveraging SELinux with its cgroups to create the container sandbox.\nSection 4: This requirement must be implemented organizationally.\nSection 5: This requirement must be implemented organizationally. Note: OpenShift supports different network infrastructures via the CNI plugin interface (e.g. OVN-Kubernetes, OpenShift-SDN, hardware networks etc.) OVN-Kubernetes, hardware networks etc.) The underlying network is abstracted by the network model in Openshift and usage is consistent across containers. This allows OpenShift to uniformly implement network security features such as: Firewall rules over network policies.\nSection 6: This requirement must be implemented organizationally. Note: OpenShift provides fine-grained metrics for external capacity management via monitoring.\nSection 7: OpenShift offers automated checks for the availability and health of an application. If the LivenessProbe (Health) repeatedly receives a negative result or is not reachable, the affected pod with the container is restarted. Using ReadinessProbe, a container can control whether it is ready to accept HTTP(S) based requests or not. Note: Monitoring is considered in APP.4.4.A11.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_namespace_separation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_node_separation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_network_separation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "coreos_enable_selinux_kernel_argument"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "selinux_state"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "selinux_policytype"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "liveness_readiness_probe_in_workload"
                  }
                ]
              },
              {
                "uuid": "0ed62f8f-e992-4c78-afd3-90dc5b07b37e",
                "control-id": "sys-1.6.a4",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "This requirement must be implemented organizationally. Note: OpenShift supports the requirement through the built-in functionalities and enables the highest possible level of automation. On the one hand, CI/CD tools are delivered with OpenShift pipelines and integrated into the platform. On the other hand, pre-configured build processes based on Red Hat experience are available that are based on Source2Image and thus support planning. The built-in registry allows you to store images and other associated information, such as Helm charts or SBOMs. The abstractions available in Openshift allow the entire image distribution process to be documented and controlled as code. This further allows the image distribution process to be managed via OpenShift GitOps."
                  }
                ]
              },
              {
                "uuid": "22821e0a-4747-42d4-ac82-4d22451157b3",
                "control-id": "sys-1.6.a5",
                "description": "Section 1: Hosts and containers are controlled via the Kubernetes API. This is addressed via api. The load balancer used for this is located in the administration network. The load balancer for *.apps. is set up separately in the active network. This means that the administration is appropriately separated. The Console (the OpenShift web UI) is used by all users. Authorization takes place at the API level and is secured via RBAC. The control plane is to be located in an administration network.\nSection 2: The web UI can be configured on another router that is terminated on the administration load balancer and is therefore only accessible from the administration network. This means that it can no longer be reached from the active network.\nSection 3: This is a standard OpenShift feature. The OpenShift documentation contains the necessary communication paths between control plane, infrastructure and worker nodes, as well as the necessary firewall activations of the underlying network stack at hardware or IaaS level. The communication between containers or pods within a client (“Project”) is not restricted by default, but can be regulated with micro-segmentation if necessary or as a service mesh with mTLS authentication be implemented (see APP.4.4.A18).\nExternally exposed services can receive their own IP and thus data traffic can also be separated outside the platform. Inter-node communication is carried out via suitable tunnel protocols (VXLAN, GENEVE) and can also be encrypted using IPSec.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_network_separation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "configure_network_policies"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "configure_network_policies_namespaces"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "service_firewalld_enabled"
                  }
                ]
              },
              {
                "uuid": "8f771726-26d1-438f-b5a2-aabfb994ad33",
                "control-id": "sys-1.6.a6",
                "description": "Section 1: This requirement must be implemented organizationally. Note: OpenShift supports the requirement by allowing only certain sources. This allows the sources from which images come to be restricted and new sources to be added in a controlled process. Quay can also be used to provide your own registry in an open environment as a trustworthy delivery point for external software. Images can also be checked for vulnerabilities here.\nSection 2: This requirement must be implemented organizationally. Note: OpenShift makes it possible to verify the signatures of images before use and thus enforce the identification requirement. Red Hat Advanced Cluster Security for Kubernetes (ACS) can check and optionally enforce signatures as well as certain labels (e.g. MAINTAINER) for images. For images delivered by Red Hat via the official Red Hat Registry, the MAINTAINER label of the container images is always maintained, through which Red Hat can be identified as the creator of the images. Images are also signed with GPG keys.\nSection 3: This requirement must be implemented organizationally. Note: Images from the Red Hat Registry are regularly checked for security vulnerabilities and updated accordingly. The security status of the images is indicated via a health indicator. ACS can perform technical checks through regular scans and report conspicuous containers or containers with identified vulnerabilities, thereby supporting the implementation of the requirement.\nSection 4: This requirement must be implemented organizationally. Note: For discontinued images with appropriate identification (e.g. through labels), policies implemented in ACS can report these violations. ACS also provides policies that report when images have not been scanned for more than 30/60/90 days. However, this means that an image must be built and rolled out at this interval so that the scans during the build process are effective. With a CI/CD pipeline with a high level of automation, this usually does not represent any increased effort.\nSection 5: This requirement must be implemented organizationally. Note: Image-level labels or image tags could be used here.\nSection 6: This requirement must be implemented organizationally for integrated software or self-created software. Note: OpenShift supports Lifecycle Management (OLM) with Operator. Software managed using OLM or Cluster Operator receives updates via the Operator Hub or Cluster Updates. An automated check with automatic or alternatively manual release is possible for this software.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_allowed_registries"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_allowed_registries_for_import"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_insecure_allowed_registries_for_import"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_insecure_registries"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "reject_unsigned_images_by_default"
                  }
                ]
              },
              {
                "uuid": "3c6b9454-5846-45cc-9523-5bcf0b6f016e",
                "control-id": "sys-1.6.a7",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "OpenShift Logging stores the containers' logging data in a separate log management system. The output of the container is saved as long as it is on STDOUT and STDERR. The logging data can also be forwarded to different log storage depending on the source (e.g. infrastructure or application). It is the responsibility of the applications to write log output to STDOUT and errors to STDERR."
                  }
                ]
              },
              {
                "uuid": "d6cc108e-0d5c-4c8d-991e-009fca1243f6",
                "control-id": "sys-1.6.a8",
                "description": "Section 1: OpenShift offers secrets that are only available to the containers and the people authorized via RBAC in the tenant or project (client). Section 2: This requirement must be enforced as part of application development. OpenShift offers suitable mechanisms (secrets) with encryption of the etcd store if necessary. Section 3: OpenShift offers corresponding mechanisms (secrets). Unless the secrets are dynamically generated, third-party/community tools such as SealedSecrets or HashiCorp Vault can help securely deploy the secrets. Section 4: This requirement must be implemented organizationally. All of this information can and should be managed in Secrets.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_least_privilege"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_limit_secrets_access"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_limit_cluster_admin"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_wildcard_use"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_roles_defined"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_cluster_roles_defined"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "api_server_encryption_provider_cipher"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "secrets_no_environment_variables"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "secrets_consider_external_storage"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "uuid": "a862362e-8f48-445c-a33f-51c15e668b39",
        "type": "validation",
        "title": "openscap",
        "description": "openscap",
        "props": [
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "general_namespace_separation",
            "remarks": "rule_set_000"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Each Namespace should only host one application",
            "remarks": "rule_set_000"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "general_namespace_separation",
            "remarks": "rule_set_000"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Each Namespace should only host one application",
            "remarks": "rule_set_000"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_anonymous_auth",
            "remarks": "rule_set_001"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that anonymous requests to the API Server are authorized",
            "remarks": "rule_set_001"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_anonymous_auth",
            "remarks": "rule_set_001"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that anonymous requests to the API Server are authorized",
            "remarks": "rule_set_001"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kubelet_anonymous_auth",
            "remarks": "rule_set_002"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Disable Anonymous Authentication to the Kubelet",
            "remarks": "rule_set_002"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kubelet_anonymous_auth",
            "remarks": "rule_set_002"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Disable Anonymous Authentication to the Kubelet",
            "remarks": "rule_set_002"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kubeadmin_removed",
            "remarks": "rule_set_003"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that the kubeadmin secret has been removed",
            "remarks": "rule_set_003"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kubeadmin_removed",
            "remarks": "rule_set_003"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that the kubeadmin secret has been removed",
            "remarks": "rule_set_003"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "rbac_least_privilege",
            "remarks": "rule_set_004"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that the RBAC setup follows the principle of least privilege",
            "remarks": "rule_set_004"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "rbac_least_privilege",
            "remarks": "rule_set_004"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that the RBAC setup follows the principle of least privilege",
            "remarks": "rule_set_004"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "coreos_enable_selinux_kernel_argument",
            "remarks": "rule_set_005"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure SELinux Not Disabled in the kernel arguments",
            "remarks": "rule_set_005"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "coreos_enable_selinux_kernel_argument",
            "remarks": "rule_set_005"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure SELinux Not Disabled in the kernel arguments",
            "remarks": "rule_set_005"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "selinux_policytype",
            "remarks": "rule_set_006"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Configure SELinux Policy",
            "remarks": "rule_set_006"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "selinux_policytype",
            "remarks": "rule_set_006"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Configure SELinux Policy",
            "remarks": "rule_set_006"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "selinux_state",
            "remarks": "rule_set_007"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure SELinux State is Enforcing",
            "remarks": "rule_set_007"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "selinux_state",
            "remarks": "rule_set_007"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure SELinux State is Enforcing",
            "remarks": "rule_set_007"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_privileged_containers",
            "remarks": "rule_set_008"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Privileged Container Use",
            "remarks": "rule_set_008"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_privileged_containers",
            "remarks": "rule_set_008"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Privileged Container Use",
            "remarks": "rule_set_008"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_root_containers",
            "remarks": "rule_set_009"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Container Running As Root User",
            "remarks": "rule_set_009"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_root_containers",
            "remarks": "rule_set_009"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Container Running As Root User",
            "remarks": "rule_set_009"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_ipc_namespace",
            "remarks": "rule_set_010"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Access to the Host IPC Namespace",
            "remarks": "rule_set_010"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_ipc_namespace",
            "remarks": "rule_set_010"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Access to the Host IPC Namespace",
            "remarks": "rule_set_010"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_process_id_namespace",
            "remarks": "rule_set_011"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Access to the Host Process ID Namespace",
            "remarks": "rule_set_011"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_process_id_namespace",
            "remarks": "rule_set_011"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Access to the Host Process ID Namespace",
            "remarks": "rule_set_011"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_host_dir_volume_plugin",
            "remarks": "rule_set_012"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Containers Ability to use the HostDir volume plugin",
            "remarks": "rule_set_012"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_host_dir_volume_plugin",
            "remarks": "rule_set_012"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Containers Ability to use the HostDir volume plugin",
            "remarks": "rule_set_012"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_net_raw_capability",
            "remarks": "rule_set_013"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Use of the CAP_NET_RAW",
            "remarks": "rule_set_013"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_net_raw_capability",
            "remarks": "rule_set_013"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Use of the CAP_NET_RAW",
            "remarks": "rule_set_013"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_network_namespace",
            "remarks": "rule_set_014"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Access to the Host Network Namespace",
            "remarks": "rule_set_014"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_network_namespace",
            "remarks": "rule_set_014"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Access to the Host Network Namespace",
            "remarks": "rule_set_014"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "general_backup_solution_installed",
            "remarks": "rule_set_015"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "A Backup Solution Has To Be Installed",
            "remarks": "rule_set_015"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "general_backup_solution_installed",
            "remarks": "rule_set_015"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "A Backup Solution Has To Be Installed",
            "remarks": "rule_set_015"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "etcd_backup",
            "remarks": "rule_set_016"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Configure Recurring Backups For etcd",
            "remarks": "rule_set_016"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "etcd_backup",
            "remarks": "rule_set_016"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Configure Recurring Backups For etcd",
            "remarks": "rule_set_016"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "general_network_separation",
            "remarks": "rule_set_017"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Create Network Boundaries between Functional Different Nodes",
            "remarks": "rule_set_017"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "general_network_separation",
            "remarks": "rule_set_017"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Create Network Boundaries between Functional Different Nodes",
            "remarks": "rule_set_017"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "configure_network_policies",
            "remarks": "rule_set_018"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that the CNI in use supports Network Policies",
            "remarks": "rule_set_018"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "configure_network_policies",
            "remarks": "rule_set_018"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that the CNI in use supports Network Policies",
            "remarks": "rule_set_018"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "configure_network_policies_namespaces",
            "remarks": "rule_set_019"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that application Namespaces have Network Policies defined.",
            "remarks": "rule_set_019"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "configure_network_policies_namespaces",
            "remarks": "rule_set_019"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that application Namespaces have Network Policies defined.",
            "remarks": "rule_set_019"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "project_config_and_template_network_policy",
            "remarks": "rule_set_020"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that project templates autocreate Network Policies",
            "remarks": "rule_set_020"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "project_config_and_template_network_policy",
            "remarks": "rule_set_020"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that project templates autocreate Network Policies",
            "remarks": "rule_set_020"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "accounts_unique_service_account",
            "remarks": "rule_set_021"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure Usage of Unique Service Accounts",
            "remarks": "rule_set_021"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "accounts_unique_service_account",
            "remarks": "rule_set_021"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure Usage of Unique Service Accounts",
            "remarks": "rule_set_021"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "accounts_no_rolebindings_default_service_account",
            "remarks": "rule_set_022"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure no RoleBindings set for default Service Account",
            "remarks": "rule_set_022"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "accounts_no_rolebindings_default_service_account",
            "remarks": "rule_set_022"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure no RoleBindings set for default Service Account",
            "remarks": "rule_set_022"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "accounts_no_clusterrolebindings_default_service_account",
            "remarks": "rule_set_023"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure no ClusterRoleBindings set for default Service Account",
            "remarks": "rule_set_023"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "accounts_no_clusterrolebindings_default_service_account",
            "remarks": "rule_set_023"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure no ClusterRoleBindings set for default Service Account",
            "remarks": "rule_set_023"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "rbac_wildcard_use",
            "remarks": "rule_set_024"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Minimize Wildcard Usage in Cluster and Local Roles",
            "remarks": "rule_set_024"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "rbac_wildcard_use",
            "remarks": "rule_set_024"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Minimize Wildcard Usage in Cluster and Local Roles",
            "remarks": "rule_set_024"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "accounts_restrict_service_account_tokens",
            "remarks": "rule_set_025"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Restrict Automounting of Service Account Tokens",
            "remarks": "rule_set_025"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "accounts_restrict_service_account_tokens",
            "remarks": "rule_set_025"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Restrict Automounting of Service Account Tokens",
            "remarks": "rule_set_025"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_drop_container_capabilities",
            "remarks": "rule_set_026"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Drop Container Capabilities",
            "remarks": "rule_set_026"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_drop_container_capabilities",
            "remarks": "rule_set_026"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Drop Container Capabilities",
            "remarks": "rule_set_026"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_container_allowed_capabilities",
            "remarks": "rule_set_027"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Container Capabilities",
            "remarks": "rule_set_027"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_container_allowed_capabilities",
            "remarks": "rule_set_027"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Container Capabilities",
            "remarks": "rule_set_027"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_host_ports",
            "remarks": "rule_set_028"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Containers Ability to bind to privileged ports",
            "remarks": "rule_set_028"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_host_ports",
            "remarks": "rule_set_028"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Containers Ability to bind to privileged ports",
            "remarks": "rule_set_028"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_privilege_escalation",
            "remarks": "rule_set_029"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Containers Ability to Escalate Privileges",
            "remarks": "rule_set_029"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scc_limit_privilege_escalation",
            "remarks": "rule_set_029"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Containers Ability to Escalate Privileges",
            "remarks": "rule_set_029"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "liveness_readiness_probe_in_workload",
            "remarks": "rule_set_030"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that all workloads have liveness and readiness probes",
            "remarks": "rule_set_030"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "liveness_readiness_probe_in_workload",
            "remarks": "rule_set_030"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that all workloads have liveness and readiness probes",
            "remarks": "rule_set_030"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "ocp_insecure_registries",
            "remarks": "rule_set_031"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Check if any insecure registry sources is configured",
            "remarks": "rule_set_031"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "ocp_insecure_registries",
            "remarks": "rule_set_031"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Check if any insecure registry sources is configured",
            "remarks": "rule_set_031"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "ocp_insecure_allowed_registries_for_import",
            "remarks": "rule_set_032"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Check configured allowed registries for import uses secure protocol",
            "remarks": "rule_set_032"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "ocp_insecure_allowed_registries_for_import",
            "remarks": "rule_set_032"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Check configured allowed registries for import uses secure protocol",
            "remarks": "rule_set_032"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scansettingbinding_exists",
            "remarks": "rule_set_033"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that Compliance Operator is scanning the cluster",
            "remarks": "rule_set_033"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scansettingbinding_exists",
            "remarks": "rule_set_033"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that Compliance Operator is scanning the cluster",
            "remarks": "rule_set_033"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scansettings_have_schedule",
            "remarks": "rule_set_034"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that Compliance Operator scans are running periodically",
            "remarks": "rule_set_034"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scansettings_have_schedule",
            "remarks": "rule_set_034"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that Compliance Operator scans are running periodically",
            "remarks": "rule_set_034"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scansetting_has_autoapplyremediations",
            "remarks": "rule_set_035"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Enable AutoApplyRemediation for at least One ScanSetting",
            "remarks": "rule_set_035"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "scansetting_has_autoapplyremediations",
            "remarks": "rule_set_035"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Enable AutoApplyRemediation for at least One ScanSetting",
            "remarks": "rule_set_035"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "general_node_separation",
            "remarks": "rule_set_036"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Create Boundaries between Resources using Nodes or Clusters",
            "remarks": "rule_set_036"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "general_node_separation",
            "remarks": "rule_set_036"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Create Boundaries between Resources using Nodes or Clusters",
            "remarks": "rule_set_036"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "configure_egress_ip_node_assignable",
            "remarks": "rule_set_037"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Check Egress IPs Assignable to Nodes",
            "remarks": "rule_set_037"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "configure_egress_ip_node_assignable",
            "remarks": "rule_set_037"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Check Egress IPs Assignable to Nodes",
            "remarks": "rule_set_037"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "master_taint_noschedule",
            "remarks": "rule_set_038"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify that Control Plane Nodes are not schedulable for workloads",
            "remarks": "rule_set_038"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "master_taint_noschedule",
            "remarks": "rule_set_038"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify that Control Plane Nodes are not schedulable for workloads",
            "remarks": "rule_set_038"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_groupowner_kubelet_conf",
            "remarks": "rule_set_039"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify Group Who Owns The Kubelet Configuration File",
            "remarks": "rule_set_039"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_groupowner_kubelet_conf",
            "remarks": "rule_set_039"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify Group Who Owns The Kubelet Configuration File",
            "remarks": "rule_set_039"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_groupowner_worker_ca",
            "remarks": "rule_set_040"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify Group Who Owns the Worker Certificate Authority File",
            "remarks": "rule_set_040"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_groupowner_worker_ca",
            "remarks": "rule_set_040"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify Group Who Owns the Worker Certificate Authority File",
            "remarks": "rule_set_040"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_groupowner_worker_kubeconfig",
            "remarks": "rule_set_041"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify Group Who Owns The Worker Kubeconfig File",
            "remarks": "rule_set_041"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_groupowner_worker_kubeconfig",
            "remarks": "rule_set_041"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify Group Who Owns The Worker Kubeconfig File",
            "remarks": "rule_set_041"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_groupowner_worker_service",
            "remarks": "rule_set_042"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify Group Who Owns The OpenShift Node Service File",
            "remarks": "rule_set_042"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_groupowner_worker_service",
            "remarks": "rule_set_042"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify Group Who Owns The OpenShift Node Service File",
            "remarks": "rule_set_042"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_owner_kubelet",
            "remarks": "rule_set_043"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify User Who Owns The Kubelet Configuration File",
            "remarks": "rule_set_043"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_owner_kubelet",
            "remarks": "rule_set_043"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify User Who Owns The Kubelet Configuration File",
            "remarks": "rule_set_043"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_owner_kubelet_conf",
            "remarks": "rule_set_044"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify User Who Owns The Kubelet Configuration File",
            "remarks": "rule_set_044"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_owner_kubelet_conf",
            "remarks": "rule_set_044"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify User Who Owns The Kubelet Configuration File",
            "remarks": "rule_set_044"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_owner_worker_ca",
            "remarks": "rule_set_045"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify User Who Owns the Worker Certificate Authority File",
            "remarks": "rule_set_045"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_owner_worker_ca",
            "remarks": "rule_set_045"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify User Who Owns the Worker Certificate Authority File",
            "remarks": "rule_set_045"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_owner_worker_kubeconfig",
            "remarks": "rule_set_046"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify User Who Owns The Worker Kubeconfig File",
            "remarks": "rule_set_046"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_owner_worker_kubeconfig",
            "remarks": "rule_set_046"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify User Who Owns The Worker Kubeconfig File",
            "remarks": "rule_set_046"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_owner_worker_service",
            "remarks": "rule_set_047"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify User Who Owns The OpenShift Node Service File",
            "remarks": "rule_set_047"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_owner_worker_service",
            "remarks": "rule_set_047"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify User Who Owns The OpenShift Node Service File",
            "remarks": "rule_set_047"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_permissions_kubelet",
            "remarks": "rule_set_048"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify Permissions on The Kubelet Configuration File",
            "remarks": "rule_set_048"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_permissions_kubelet",
            "remarks": "rule_set_048"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify Permissions on The Kubelet Configuration File",
            "remarks": "rule_set_048"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_permissions_kubelet_conf",
            "remarks": "rule_set_049"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify Permissions on The Kubelet Configuration File",
            "remarks": "rule_set_049"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_permissions_kubelet_conf",
            "remarks": "rule_set_049"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify Permissions on The Kubelet Configuration File",
            "remarks": "rule_set_049"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_permissions_worker_ca",
            "remarks": "rule_set_050"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify Permissions on the Worker Certificate Authority File",
            "remarks": "rule_set_050"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_permissions_worker_ca",
            "remarks": "rule_set_050"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify Permissions on the Worker Certificate Authority File",
            "remarks": "rule_set_050"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_permissions_worker_kubeconfig",
            "remarks": "rule_set_051"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify Permissions on the Worker Kubeconfig File",
            "remarks": "rule_set_051"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_permissions_worker_kubeconfig",
            "remarks": "rule_set_051"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify Permissions on the Worker Kubeconfig File",
            "remarks": "rule_set_051"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_permissions_worker_service",
            "remarks": "rule_set_052"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify Permissions on the OpenShift Node Service File",
            "remarks": "rule_set_052"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_permissions_worker_service",
            "remarks": "rule_set_052"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify Permissions on the OpenShift Node Service File",
            "remarks": "rule_set_052"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kubelet_configure_client_ca",
            "remarks": "rule_set_053"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kubelet - Configure the Client CA Certificate",
            "remarks": "rule_set_053"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kubelet_configure_client_ca",
            "remarks": "rule_set_053"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kubelet - Configure the Client CA Certificate",
            "remarks": "rule_set_053"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kubelet_configure_tls_cert",
            "remarks": "rule_set_054"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure That The kubelet Client Certificate Is Correctly Set",
            "remarks": "rule_set_054"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kubelet_configure_tls_cert",
            "remarks": "rule_set_054"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure That The kubelet Client Certificate Is Correctly Set",
            "remarks": "rule_set_054"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kubelet_configure_tls_cipher_suites",
            "remarks": "rule_set_055"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that the Kubelet only makes use of Strong Cryptographic Ciphers",
            "remarks": "rule_set_055"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kubelet_configure_tls_cipher_suites",
            "remarks": "rule_set_055"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that the Kubelet only makes use of Strong Cryptographic Ciphers",
            "remarks": "rule_set_055"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kubelet_configure_tls_key",
            "remarks": "rule_set_056"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure That The kubelet Server Key Is Correctly Set",
            "remarks": "rule_set_056"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kubelet_configure_tls_key",
            "remarks": "rule_set_056"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure That The kubelet Server Key Is Correctly Set",
            "remarks": "rule_set_056"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kubelet_configure_tls_min_version",
            "remarks": "rule_set_057"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure Kubelet is configured with allowed TLS versions",
            "remarks": "rule_set_057"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kubelet_configure_tls_min_version",
            "remarks": "rule_set_057"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure Kubelet is configured with allowed TLS versions",
            "remarks": "rule_set_057"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_client_ca",
            "remarks": "rule_set_058"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Configure the Client Certificate Authority for the API Server",
            "remarks": "rule_set_058"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_client_ca",
            "remarks": "rule_set_058"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Configure the Client Certificate Authority for the API Server",
            "remarks": "rule_set_058"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_kubelet_client_cert",
            "remarks": "rule_set_059"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Configure the kubelet Certificate File for the API Server",
            "remarks": "rule_set_059"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_kubelet_client_cert",
            "remarks": "rule_set_059"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Configure the kubelet Certificate File for the API Server",
            "remarks": "rule_set_059"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_kubelet_client_key",
            "remarks": "rule_set_060"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Configure the kubelet Certificate Key for the API Server",
            "remarks": "rule_set_060"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_kubelet_client_key",
            "remarks": "rule_set_060"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Configure the kubelet Certificate Key for the API Server",
            "remarks": "rule_set_060"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_https_for_kubelet_conn",
            "remarks": "rule_set_061"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that the --kubelet-https argument is set to true",
            "remarks": "rule_set_061"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_https_for_kubelet_conn",
            "remarks": "rule_set_061"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that the --kubelet-https argument is set to true",
            "remarks": "rule_set_061"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_tls_cert",
            "remarks": "rule_set_062"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Configure the Certificate for the API Server",
            "remarks": "rule_set_062"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_tls_cert",
            "remarks": "rule_set_062"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Configure the Certificate for the API Server",
            "remarks": "rule_set_062"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_tls_cipher_suites",
            "remarks": "rule_set_063"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Use Strong Cryptographic Ciphers on the API Server",
            "remarks": "rule_set_063"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_tls_cipher_suites",
            "remarks": "rule_set_063"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Use Strong Cryptographic Ciphers on the API Server",
            "remarks": "rule_set_063"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_tls_private_key",
            "remarks": "rule_set_064"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Configure the Certificate Key for the API Server",
            "remarks": "rule_set_064"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_tls_private_key",
            "remarks": "rule_set_064"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Configure the Certificate Key for the API Server",
            "remarks": "rule_set_064"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_tls_security_profile_not_old",
            "remarks": "rule_set_065"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure APIServer is not configured with Old tlsSecurityProfile",
            "remarks": "rule_set_065"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_tls_security_profile_not_old",
            "remarks": "rule_set_065"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure APIServer is not configured with Old tlsSecurityProfile",
            "remarks": "rule_set_065"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "tls_version_check_apiserver",
            "remarks": "rule_set_066"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure TLS v1.2 is minimum for Openshift APIServer",
            "remarks": "rule_set_066"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "tls_version_check_apiserver",
            "remarks": "rule_set_066"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure TLS v1.2 is minimum for Openshift APIServer",
            "remarks": "rule_set_066"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "cluster_version_operator_exists",
            "remarks": "rule_set_067"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that Cluster Version Operator is deployed",
            "remarks": "rule_set_067"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "cluster_version_operator_exists",
            "remarks": "rule_set_067"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that Cluster Version Operator is deployed",
            "remarks": "rule_set_067"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "cluster_version_operator_verify_integrity",
            "remarks": "rule_set_068"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that Cluster Version Operator verifies integrity",
            "remarks": "rule_set_068"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "cluster_version_operator_verify_integrity",
            "remarks": "rule_set_068"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that Cluster Version Operator verifies integrity",
            "remarks": "rule_set_068"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_integrity_exists",
            "remarks": "rule_set_069"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that File Integrity Operator is scanning the cluster",
            "remarks": "rule_set_069"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_integrity_exists",
            "remarks": "rule_set_069"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that File Integrity Operator is scanning the cluster",
            "remarks": "rule_set_069"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_integrity_notification_enabled",
            "remarks": "rule_set_070"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure the notification is enabled for file integrity operator",
            "remarks": "rule_set_070"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "file_integrity_notification_enabled",
            "remarks": "rule_set_070"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure the notification is enabled for file integrity operator",
            "remarks": "rule_set_070"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "configure_appropriate_network_policies",
            "remarks": "rule_set_071"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure Appropriate Network Policies are Configured",
            "remarks": "rule_set_071"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "configure_appropriate_network_policies",
            "remarks": "rule_set_071"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure Appropriate Network Policies are Configured",
            "remarks": "rule_set_071"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "multiple_nodes_in_every_mcp",
            "remarks": "rule_set_072"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure every MachineConfigPool consists of More Than One Node",
            "remarks": "rule_set_072"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "multiple_nodes_in_every_mcp",
            "remarks": "rule_set_072"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure every MachineConfigPool consists of More Than One Node",
            "remarks": "rule_set_072"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "control_plane_nodes_in_three_zones",
            "remarks": "rule_set_073"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure Control Plane / Master Nodes are Distributed Across Three Failure Zones",
            "remarks": "rule_set_073"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "control_plane_nodes_in_three_zones",
            "remarks": "rule_set_073"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure Control Plane / Master Nodes are Distributed Across Three Failure Zones",
            "remarks": "rule_set_073"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "worker_nodes_in_two_zones_or_more",
            "remarks": "rule_set_074"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure Worker Nodes are Distributed Across Three Failure Zones",
            "remarks": "rule_set_074"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "worker_nodes_in_two_zones_or_more",
            "remarks": "rule_set_074"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure Worker Nodes are Distributed Across Three Failure Zones",
            "remarks": "rule_set_074"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "infra_nodes_in_two_zones_or_more",
            "remarks": "rule_set_075"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure Infrastructure Nodes are Distributed Across Three Failure Zones",
            "remarks": "rule_set_075"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "infra_nodes_in_two_zones_or_more",
            "remarks": "rule_set_075"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure Infrastructure Nodes are Distributed Across Three Failure Zones",
            "remarks": "rule_set_075"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "three_control_plane_nodes",
            "remarks": "rule_set_076"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure there are Three Machines in the Master MachineConfigPool",
            "remarks": "rule_set_076"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "three_control_plane_nodes",
            "remarks": "rule_set_076"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure there are Three Machines in the Master MachineConfigPool",
            "remarks": "rule_set_076"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "anti_affinity_or_topology_spread_constraints_in_deployment",
            "remarks": "rule_set_077"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure Deployments have either Anti-Affinity Rules or Topology Spread Constraints",
            "remarks": "rule_set_077"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "anti_affinity_or_topology_spread_constraints_in_deployment",
            "remarks": "rule_set_077"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure Deployments have either Anti-Affinity Rules or Topology Spread Constraints",
            "remarks": "rule_set_077"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "anti_affinity_or_topology_spread_constraints_in_statefulset",
            "remarks": "rule_set_078"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure Statefulsets have either Anti-Affinity Rules or Topology Spread Constraints",
            "remarks": "rule_set_078"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "anti_affinity_or_topology_spread_constraints_in_statefulset",
            "remarks": "rule_set_078"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure Statefulsets have either Anti-Affinity Rules or Topology Spread Constraints",
            "remarks": "rule_set_078"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kube_descheduler_operator_exists",
            "remarks": "rule_set_079"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that the Kube Descheduler operator is deployed",
            "remarks": "rule_set_079"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kube_descheduler_operator_exists",
            "remarks": "rule_set_079"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that the Kube Descheduler operator is deployed",
            "remarks": "rule_set_079"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kube_descheduler_lifecycle_policy",
            "remarks": "rule_set_080"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that the LifecycleAndUtilization Profile for the Kube Descheduler Operator is Enabled",
            "remarks": "rule_set_080"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kube_descheduler_lifecycle_policy",
            "remarks": "rule_set_080"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that the LifecycleAndUtilization Profile for the Kube Descheduler Operator is Enabled",
            "remarks": "rule_set_080"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kube_descheduler_podlifetime",
            "remarks": "rule_set_081"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Set Pod Lifetime for the Deschedulers",
            "remarks": "rule_set_081"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "kube_descheduler_podlifetime",
            "remarks": "rule_set_081"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Set Pod Lifetime for the Deschedulers",
            "remarks": "rule_set_081"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "service_firewalld_enabled",
            "remarks": "rule_set_082"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify firewalld Enabled",
            "remarks": "rule_set_082"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "service_firewalld_enabled",
            "remarks": "rule_set_082"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Verify firewalld Enabled",
            "remarks": "rule_set_082"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "ocp_allowed_registries",
            "remarks": "rule_set_083"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Allowed registries are configured",
            "remarks": "rule_set_083"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "ocp_allowed_registries",
            "remarks": "rule_set_083"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Allowed registries are configured",
            "remarks": "rule_set_083"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "ocp_allowed_registries_for_import",
            "remarks": "rule_set_084"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Allowed registries for import are configured",
            "remarks": "rule_set_084"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "ocp_allowed_registries_for_import",
            "remarks": "rule_set_084"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Allowed registries for import are configured",
            "remarks": "rule_set_084"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "reject_unsigned_images_by_default",
            "remarks": "rule_set_085"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure the Container Runtime rejects unsigned images by default",
            "remarks": "rule_set_085"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "reject_unsigned_images_by_default",
            "remarks": "rule_set_085"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure the Container Runtime rejects unsigned images by default",
            "remarks": "rule_set_085"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "rbac_limit_secrets_access",
            "remarks": "rule_set_086"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Access to Kubernetes Secrets",
            "remarks": "rule_set_086"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "rbac_limit_secrets_access",
            "remarks": "rule_set_086"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limit Access to Kubernetes Secrets",
            "remarks": "rule_set_086"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "rbac_limit_cluster_admin",
            "remarks": "rule_set_087"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that the cluster-admin role is only used where required",
            "remarks": "rule_set_087"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "rbac_limit_cluster_admin",
            "remarks": "rule_set_087"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that the cluster-admin role is only used where required",
            "remarks": "rule_set_087"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "rbac_roles_defined",
            "remarks": "rule_set_088"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure roles are defined in the cluster",
            "remarks": "rule_set_088"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "rbac_roles_defined",
            "remarks": "rule_set_088"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure roles are defined in the cluster",
            "remarks": "rule_set_088"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "rbac_cluster_roles_defined",
            "remarks": "rule_set_089"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure cluster roles are defined in the cluster",
            "remarks": "rule_set_089"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "rbac_cluster_roles_defined",
            "remarks": "rule_set_089"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure cluster roles are defined in the cluster",
            "remarks": "rule_set_089"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_encryption_provider_cipher",
            "remarks": "rule_set_090"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Configure the Encryption Provider Cipher",
            "remarks": "rule_set_090"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "api_server_encryption_provider_cipher",
            "remarks": "rule_set_090"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Configure the Encryption Provider Cipher",
            "remarks": "rule_set_090"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "secrets_no_environment_variables",
            "remarks": "rule_set_091"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Do Not Use Environment Variables with Secrets",
            "remarks": "rule_set_091"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "secrets_no_environment_variables",
            "remarks": "rule_set_091"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Do Not Use Environment Variables with Secrets",
            "remarks": "rule_set_091"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "secrets_consider_external_storage",
            "remarks": "rule_set_092"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Consider external secret storage",
            "remarks": "rule_set_092"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "secrets_consider_external_storage",
            "remarks": "rule_set_092"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Consider external secret storage",
            "remarks": "rule_set_092"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "project_config_and_template_resource_quota",
            "remarks": "rule_set_093"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that project templates autocreate Resource Quotas",
            "remarks": "rule_set_093"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "project_config_and_template_resource_quota",
            "remarks": "rule_set_093"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that project templates autocreate Resource Quotas",
            "remarks": "rule_set_093"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "project_template_resource_quota",
            "remarks": "rule_set_094"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that project templates autocreate Resource Quotas",
            "remarks": "rule_set_094"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "project_template_resource_quota",
            "remarks": "rule_set_094"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that project templates autocreate Resource Quotas",
            "remarks": "rule_set_094"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "resource_requests_limits_in_daemonset",
            "remarks": "rule_set_095"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that all daemonsets has resource limits",
            "remarks": "rule_set_095"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "resource_requests_limits_in_daemonset",
            "remarks": "rule_set_095"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that all daemonsets has resource limits",
            "remarks": "rule_set_095"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "resource_requests_limits_in_deployment",
            "remarks": "rule_set_096"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that all deployments has resource limits",
            "remarks": "rule_set_096"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "resource_requests_limits_in_deployment",
            "remarks": "rule_set_096"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that all deployments has resource limits",
            "remarks": "rule_set_096"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "resource_requests_limits_in_statefulset",
            "remarks": "rule_set_097"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that all statefulsets has resource limits",
            "remarks": "rule_set_097"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "resource_requests_limits_in_statefulset",
            "remarks": "rule_set_097"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that all statefulsets has resource limits",
            "remarks": "rule_set_097"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "resource_requests_quota",
            "remarks": "rule_set_098"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure workloads use resource requests and limits",
            "remarks": "rule_set_098"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "resource_requests_quota",
            "remarks": "rule_set_098"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure workloads use resource requests and limits",
            "remarks": "rule_set_098"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "resource_requests_quota_cluster",
            "remarks": "rule_set_099"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure workloads use cluster resource requests and limits",
            "remarks": "rule_set_099"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "resource_requests_quota_cluster",
            "remarks": "rule_set_099"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure workloads use cluster resource requests and limits",
            "remarks": "rule_set_099"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "resource_requests_quota_per_project",
            "remarks": "rule_set_100"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure workloads use resource requests and limits per namespace",
            "remarks": "rule_set_100"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "resource_requests_quota_per_project",
            "remarks": "rule_set_100"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure workloads use resource requests and limits per namespace",
            "remarks": "rule_set_100"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "configure_network_bandwidth",
            "remarks": "rule_set_101"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limiting Network Bandwidth in Pods",
            "remarks": "rule_set_101"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "configure_network_bandwidth",
            "remarks": "rule_set_101"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Limiting Network Bandwidth in Pods",
            "remarks": "rule_set_101"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "sandboxed_containers_operator_exists",
            "remarks": "rule_set_102"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that Sandboxed Containers Operator exists in the cluster",
            "remarks": "rule_set_102"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "sandboxed_containers_operator_exists",
            "remarks": "rule_set_102"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that Sandboxed Containers Operator exists in the cluster",
            "remarks": "rule_set_102"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "sandboxed_containers_operator_configured",
            "remarks": "rule_set_103"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that Sandboxed Containers Operator is Configured",
            "remarks": "rule_set_103"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "sandboxed_containers_operator_configured",
            "remarks": "rule_set_103"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that Sandboxed Containers Operator is Configured",
            "remarks": "rule_set_103"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "general_apply_scc",
            "remarks": "rule_set_104"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Apply Security Context to Your Pods and Containers",
            "remarks": "rule_set_104"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "general_apply_scc",
            "remarks": "rule_set_104"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Apply Security Context to Your Pods and Containers",
            "remarks": "rule_set_104"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "gitops_operator_exists",
            "remarks": "rule_set_105"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that GitOps Operator is deployed",
            "remarks": "rule_set_105"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "gitops_operator_exists",
            "remarks": "rule_set_105"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure that GitOps Operator is deployed",
            "remarks": "rule_set_105"
          },
          {
            "name": "Rule_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "security_profiles_operator_exists",
            "remarks": "rule_set_106"
          },
          {
            "name": "Rule_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Make sure the Security Profiles Operator is installed",
            "remarks": "rule_set_106"
          },
          {
            "name": "Check_Id",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "security_profiles_operator_exists",
            "remarks": "rule_set_106"
          },
          {
            "name": "Check_Description",
            "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Make sure the Security Profiles Operator is installed",
            "remarks": "rule_set_106"
          }
        ],
        "control-implementations": [
          {
            "uuid": "60bc477c-0d7f-4bb1-943d-d0e8777e16b1",
            "source": "trestle://profiles/ocp4-bsi_sys_1_6-standard/profile.json",
            "description": "REPLACE_ME",
            "props": [
              {
                "name": "Framework_Short_Name",
                "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal",
                "value": "bsi-node-2022"
              }
            ],
            "implemented-requirements": [
              {
                "uuid": "c7ffb54a-04c4-4b99-9a98-9e834efafff0",
                "control-id": "sys-1.6.a1",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "This requirement must be implemented organizationally. OpenShift supports all of the goals mentioned. Comprehensive handouts are available to carry out and document the planning of container use, security and compliance, architecture and installation on OpenShift (see https://www.redhat.com/en/resources/openshift-security-guide-ebook)"
                  }
                ]
              },
              {
                "uuid": "eef317c4-2430-4c2a-8fb8-32a7dd287eea",
                "control-id": "sys-1.6.a2",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "This requirement must be implemented organizationally. Through OpenShift GitOps, OpenShift technically supports this requirement with a standardized approach to deployment, change handling and deprovisioning via kustomize or Helm charts. OpenShift provides further support through operator-based applications and platform management that automates the processes of commissioning, decommissioning and updates.\nSection 4: Start, stop and monitoring is a basic function of OpenShift. It is not possible to bypass the OpenShift methods to start and stop without manually connecting to a Container Host. For monitoring purposes, OpenShift itself offers Prometheus-based monitoring. Using Advanced Cluster Security for Kubernetes (ACS), policy-based rules can also be used to monitor the containers."
                  }
                ]
              },
              {
                "uuid": "06722ff7-cc2b-499a-9baa-7cdf630b0a3f",
                "control-id": "sys-1.6.a3",
                "description": "Section 1: This requirement must be implemented organizationally. Note: This requirement is actively supported by OpenShift. For example, OpenShift does not allow applications with fixed UID/GID settings as standard; on the contrary, these IDs are assigned dynamically (security-by-design). The behavior can be adjusted by administrators, for example for system tasks.\nSection 2: This requirement must be implemented organizationally. Note: OpenShift supports the requirements through strict client separation based on a “Project” (an extension to the Kubernetes namespace). The containers are separated from each other and from the host system via cgroups using SELinux. As long as all applications run “restricted” in the Security Context Constraint (SCC), OpenShift maintains strict client separation.\nSection 3: This requirement must be implemented organizationally. OpenShift supports this requirement by leveraging SELinux with its cgroups to create the container sandbox.\nSection 4: This requirement must be implemented organizationally.\nSection 5: This requirement must be implemented organizationally. Note: OpenShift supports different network infrastructures via the CNI plugin interface (e.g. OVN-Kubernetes, OpenShift-SDN, hardware networks etc.) OVN-Kubernetes, hardware networks etc.) The underlying network is abstracted by the network model in Openshift and usage is consistent across containers. This allows OpenShift to uniformly implement network security features such as: Firewall rules over network policies.\nSection 6: This requirement must be implemented organizationally. Note: OpenShift provides fine-grained metrics for external capacity management via monitoring.\nSection 7: OpenShift offers automated checks for the availability and health of an application. If the LivenessProbe (Health) repeatedly receives a negative result or is not reachable, the affected pod with the container is restarted. Using ReadinessProbe, a container can control whether it is ready to accept HTTP(S) based requests or not. Note: Monitoring is considered in APP.4.4.A11.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_namespace_separation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_node_separation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_network_separation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "coreos_enable_selinux_kernel_argument"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "selinux_state"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "selinux_policytype"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "liveness_readiness_probe_in_workload"
                  }
                ]
              },
              {
                "uuid": "27f36dc4-1625-4e45-8ae8-2832da268897",
                "control-id": "sys-1.6.a4",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "This requirement must be implemented organizationally. Note: OpenShift supports the requirement through the built-in functionalities and enables the highest possible level of automation. On the one hand, CI/CD tools are delivered with OpenShift pipelines and integrated into the platform. On the other hand, pre-configured build processes based on Red Hat experience are available that are based on Source2Image and thus support planning. The built-in registry allows you to store images and other associated information, such as Helm charts or SBOMs. The abstractions available in Openshift allow the entire image distribution process to be documented and controlled as code. This further allows the image distribution process to be managed via OpenShift GitOps."
                  }
                ]
              },
              {
                "uuid": "e4e0fdab-f6c5-475b-9b11-04d8d63ed688",
                "control-id": "sys-1.6.a5",
                "description": "Section 1: Hosts and containers are controlled via the Kubernetes API. This is addressed via api. The load balancer used for this is located in the administration network. The load balancer for *.apps. is set up separately in the active network. This means that the administration is appropriately separated. The Console (the OpenShift web UI) is used by all users. Authorization takes place at the API level and is secured via RBAC. The control plane is to be located in an administration network.\nSection 2: The web UI can be configured on another router that is terminated on the administration load balancer and is therefore only accessible from the administration network. This means that it can no longer be reached from the active network.\nSection 3: This is a standard OpenShift feature. The OpenShift documentation contains the necessary communication paths between control plane, infrastructure and worker nodes, as well as the necessary firewall activations of the underlying network stack at hardware or IaaS level. The communication between containers or pods within a client (“Project”) is not restricted by default, but can be regulated with micro-segmentation if necessary or as a service mesh with mTLS authentication be implemented (see APP.4.4.A18).\nExternally exposed services can receive their own IP and thus data traffic can also be separated outside the platform. Inter-node communication is carried out via suitable tunnel protocols (VXLAN, GENEVE) and can also be encrypted using IPSec.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_network_separation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "configure_network_policies"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "configure_network_policies_namespaces"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "service_firewalld_enabled"
                  }
                ]
              },
              {
                "uuid": "58e002ac-8b47-458c-8286-6747c39f28b9",
                "control-id": "sys-1.6.a6",
                "description": "Section 1: This requirement must be implemented organizationally. Note: OpenShift supports the requirement by allowing only certain sources. This allows the sources from which images come to be restricted and new sources to be added in a controlled process. Quay can also be used to provide your own registry in an open environment as a trustworthy delivery point for external software. Images can also be checked for vulnerabilities here.\nSection 2: This requirement must be implemented organizationally. Note: OpenShift makes it possible to verify the signatures of images before use and thus enforce the identification requirement. Red Hat Advanced Cluster Security for Kubernetes (ACS) can check and optionally enforce signatures as well as certain labels (e.g. MAINTAINER) for images. For images delivered by Red Hat via the official Red Hat Registry, the MAINTAINER label of the container images is always maintained, through which Red Hat can be identified as the creator of the images. Images are also signed with GPG keys.\nSection 3: This requirement must be implemented organizationally. Note: Images from the Red Hat Registry are regularly checked for security vulnerabilities and updated accordingly. The security status of the images is indicated via a health indicator. ACS can perform technical checks through regular scans and report conspicuous containers or containers with identified vulnerabilities, thereby supporting the implementation of the requirement.\nSection 4: This requirement must be implemented organizationally. Note: For discontinued images with appropriate identification (e.g. through labels), policies implemented in ACS can report these violations. ACS also provides policies that report when images have not been scanned for more than 30/60/90 days. However, this means that an image must be built and rolled out at this interval so that the scans during the build process are effective. With a CI/CD pipeline with a high level of automation, this usually does not represent any increased effort.\nSection 5: This requirement must be implemented organizationally. Note: Image-level labels or image tags could be used here.\nSection 6: This requirement must be implemented organizationally for integrated software or self-created software. Note: OpenShift supports Lifecycle Management (OLM) with Operator. Software managed using OLM or Cluster Operator receives updates via the Operator Hub or Cluster Updates. An automated check with automatic or alternatively manual release is possible for this software.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_allowed_registries"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_allowed_registries_for_import"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_insecure_allowed_registries_for_import"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_insecure_registries"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "reject_unsigned_images_by_default"
                  }
                ]
              },
              {
                "uuid": "3e7f8b3c-da9c-4821-99d6-29637401833e",
                "control-id": "sys-1.6.a7",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "OpenShift Logging stores the containers' logging data in a separate log management system. The output of the container is saved as long as it is on STDOUT and STDERR. The logging data can also be forwarded to different log storage depending on the source (e.g. infrastructure or application). It is the responsibility of the applications to write log output to STDOUT and errors to STDERR."
                  }
                ]
              },
              {
                "uuid": "b6bb3475-b472-4e58-a1ef-4fab0000591c",
                "control-id": "sys-1.6.a8",
                "description": "Section 1: OpenShift offers secrets that are only available to the containers and the people authorized via RBAC in the tenant or project (client). Section 2: This requirement must be enforced as part of application development. OpenShift offers suitable mechanisms (secrets) with encryption of the etcd store if necessary. Section 3: OpenShift offers corresponding mechanisms (secrets). Unless the secrets are dynamically generated, third-party/community tools such as SealedSecrets or HashiCorp Vault can help securely deploy the secrets. Section 4: This requirement must be implemented organizationally. All of this information can and should be managed in Secrets.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_least_privilege"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_limit_secrets_access"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_limit_cluster_admin"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_wildcard_use"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_roles_defined"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_cluster_roles_defined"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "api_server_encryption_provider_cipher"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "secrets_no_environment_variables"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "secrets_consider_external_storage"
                  }
                ]
              },
              {
                "uuid": "e058043b-6193-4568-87e9-2154cfa6d791",
                "control-id": "sys-1.6.a9",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "Section 1: This requirement must be implemented organizationally. Section 2: This requirement must be implemented organizationally and be part of the application development process. Section 3: This requirement must be implemented organizationally and suppliers must be contractually obliged to comply."
                  }
                ]
              },
              {
                "uuid": "b7b7b359-6d32-4e59-88aa-a1435ab74b09",
                "control-id": "sys-1.6.a10",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "These requirements must be implemented organizationally."
                  }
                ]
              },
              {
                "uuid": "2ecad79b-6eec-4528-835c-cfb5fd647de9",
                "control-id": "sys-1.6.a11",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "This requirement must be implemented organizationally."
                  }
                ]
              },
              {
                "uuid": "2dc05f26-4bd7-4deb-b5bc-1c595e5a0eb6",
                "control-id": "sys-1.6.a12",
                "description": "Section 1: The source of images can be restricted by configuring the allowed registries. In addition, this requirement must be implemented organizationally. Section 2: This requirement must be implemented organizationally. Section 3: This requirement is solved using image labels. Red Hat Images contain the labels io.k8s.description, summary, vender, version, url, vcs-ref and vcs-type, through which the delivered images are transparent in their function and history. For internal images, the existence of the labels can be ensured during application development. The existence of the corresponding labels can be ensured via ACS. Section 4: OpenShift can be configured to assign a digital signature to each approved registry. OpenShift then only executes images from this registry that are secured using this signature.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "partial"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_allowed_registries"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_allowed_registries_for_import"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "reject_unsigned_images_by_default"
                  }
                ]
              },
              {
                "uuid": "6974d6ee-6981-4946-b510-f82a86c31795",
                "control-id": "sys-1.6.a13",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "This requirement must be solved organizationally. Note: OpenShift offers various CI/CD solutions that can be used for automation. OpenShift Pipelines (Tekton-based) and traditional Jenkins are available directly in OpenShift. If the user uses gitlab-ci or github Actions, the runners can be executed in OpenShift. If the release process contains specific artifacts such as if you require SBOMs or the ability to statically analyze Dockerfiles, Quay and ACS can provide the necessary functionality."
                  }
                ]
              },
              {
                "uuid": "8d53caba-3563-49ea-8cf6-ffea499eccb5",
                "control-id": "sys-1.6.a14",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "Section 1: This requirement must be solved organizationally. Best practices use multiple environments (either separate clusters or multiple namespaces on a cluster) to support this process and enable automated testing (e.g. via OpenShift Pipelines or Jenkins ). Section 2: “Persistent” containers contradict the cloud native principle and do not represent “good practice”. There is also a contradiction with APP.4.4.A21 “Regular restart of pods”. Accordingly, OpenShift does not support updates at the container level. Changes to the container image always result in the pod stopping and a new pod being restarted. With the recommended use of GitOps, this is a reprovisioning of the changed elements and also documents the status of the application at a given point in time. Due to the high level of automation, this usually does not represent any increased effort."
                  }
                ]
              },
              {
                "uuid": "4a7d3088-0145-4b88-920a-a5cea616dd81",
                "control-id": "sys-1.6.a15",
                "description": "Section 1: OpenShift supports the configuration of quotas for a project (client). Applications can have their resources appropriately limited using limits/requests. Network bandwidth is limited at the pod level and can be determined separately according to incoming and outgoing network bandwidth. In addition, outgoing traffic (egress) can be marked at the namespace level with differentiated services code point (DSCP) classifications in order to assign quality of service classes to the outgoing packets in the physical network. Section 2: This requirement must be implemented organizationally. Note: The behavior of OpenShift completely replicates the standard behavior of Kubernetes. If CPU limits are exceeded, the process is slowed down. If volatile memory is exceeded, the process is stopped and restarted by the scheduler. The persistent memory management is responsible for exceeding the persistent memory - OpenShift will not enforce or limit anything here. Compliance with the limited network bandwidth is enforced by dropping packets that exceed the limit.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "project_config_and_template_resource_quota"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "project_template_resource_quota"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "resource_requests_limits_in_daemonset"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "resource_requests_limits_in_deployment"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "resource_requests_limits_in_statefulset"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "resource_requests_quota"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "resource_requests_quota_cluster"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "resource_requests_quota_per_project"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "configure_network_bandwidth"
                  }
                ]
              },
              {
                "uuid": "639b0f3e-bb48-4261-a0bf-6bf39f0919ab",
                "control-id": "sys-1.6.a16",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "Section 1: Application containers can only access administrative services remotely. Privileged containers can gain access to the host, the host's file system, or the host's network. This is necessary, for example, for the infrastructure services of OpenShift (ingress router). Normal applications (application containers) may not receive such permissions.\nSection 2: This requirement must be partially implemented organizationally and should be part of the guideline defined in SYS.1.6.A10. There may be exceptions for applications that should/need to make configurations to Kubernetes resources. This means they have administrative remote access to the corresponding Kubernetes resources. Remote access is controlled by Kubernetes and backup takes place via the Kubernetes functionalities (see module APP.4.4). The operating system including Mandatory Access Control is optimized as a runtime environment for Kubernetes. In general, it is possible to limit the provision/post-installation of remote access programs in the container. Also the container runtime security tools can detect, alert and remediate, if remote access daemon processes such as SSHD are running in a container.\nSection 3: This requirement should also be included in the policy described in SYS.1.6.A10. OpenShift only allows access to the configured ports. A container that provides remote maintenance access to these ports may not be released. Application containers should be administered exclusively via the container runtime. Using a policy, known remote access ports (e.g. 22, RDP, etc.) can be reported via ACS and their use prevented.\nSection 4: This is standard in OpenShift environments. OpenShift offers a terminal login via the oc administration tool. Communication runs via the control plane to the container and is both authenticated and authorized."
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_drop_container_capabilities"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_container_allowed_capabilities"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_host_dir_volume_plugin"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_host_ports"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_ipc_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_net_raw_capability"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_network_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_privilege_escalation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_privileged_containers"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_process_id_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_root_containers"
                  }
                ]
              },
              {
                "uuid": "bf1ac62b-1386-47db-841e-9d745ef963ac",
                "control-id": "sys-1.6.a17",
                "description": "Section 1: With OpenShift, application containers run in the Security Context Constraint (SCC) “restricted” by default. Section 2: OpenShift supports encapsulation by using SELinux. If necessary, entire nodes can also be encapsulated via underlying virtualization. This is always necessary when application containers require extended security context constraints (SCCs). With the sandbox function based on Kata Containers, OpenShift provides a convenient way to isolate containers using virtualization technology. Section 3: OpenShift offers several SCC to restrict access to the network, file system or the host itself. This should only be allowed for administrative applications such as SIEM scanners or other infrastructure services that require access to the host. These SCCs should never be given to application containers. Section 4: These exceptions must be documented in the operational documentation. A list of pods with the corresponding SCC annotation can serve as the basis for the documentation.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "partial"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_drop_container_capabilities"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_container_allowed_capabilities"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_host_dir_volume_plugin"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_host_ports"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_ipc_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_net_raw_capability"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_network_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_privilege_escalation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_privileged_containers"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_process_id_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_root_containers"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "sandboxed_containers_operator_exists"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "sandboxed_containers_operator_configured"
                  }
                ]
              },
              {
                "uuid": "502c176b-d42d-4232-9808-73e3070bec08",
                "control-id": "sys-1.6.a18",
                "description": "Section 1: With OpenShift, accounts within the container are separated from the host system by SELinux. This includes preventing the use of privileged user and group IDs as well as corresponding rights extensions (SET-UID, Set-GID bit). A range of UIDs/GIDs is provided for use in containers.\nSection 2: Security Context Constraints (SCCs) allow accounts in the container to gain controlled access.\nSection 3: The host system Red Hat CoreOS is immutable. The changes to the host operating system should only be made by OpenShift and should be necessary so that hardening by Red Hat is not inadvertently undermined. Since, in contrast to an unprotected container runtime environment, SELinux enforces the separation between the container runtime and the operating system, this mirroring of account names is not necessary.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "coreos_enable_selinux_kernel_argument"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "selinux_policytype"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "selinux_state"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_apply_scc"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_privileged_containers"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_root_containers"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_ipc_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_process_id_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_host_dir_volume_plugin"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_net_raw_capability"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_network_namespace"
                  }
                ]
              },
              {
                "uuid": "07de0bbf-de6a-4703-8554-eef2953f7421",
                "control-id": "sys-1.6.a19",
                "description": "Section 1: Applications can access persistent volumes (PVs) and temporary (ephemeral) storage in OpenShift. Persisted volumes are connected as network storage, ephemeral storage serves primarily as volatile, short-lived mass storage and is allocated within the container file system. This configures which PV can be reached and the use of the ephemeral storage is separated per pod. This means that each pod has its own volatile mass storage. Volumes can be limited in size.\nSection 2: OpenShift implements the principle of least privileges. The definition is made via an explicit configuration at the deployment level.\nSection 3: By default, no local storage is included. For reasons of reliability, this is explicitly not recommended.\nSection 4: The network storage dictates the permissions. OpenShift supports this with the dynamically assigned UID/GID of the projects (clients).",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_host_dir_volume_plugin"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_least_privilege"
                  }
                ]
              },
              {
                "uuid": "5e2019c9-7a2e-499f-850f-56d923c8b4cb",
                "control-id": "sys-1.6.a20",
                "description": "Section 1: OpenShift only maintains the current version of the configuration. It is therefore recommended to use GitOps, in which the configuration is transferred from a git repository to the OpenShift cluster. OpenShift includes OpenShift GitOps (based on the community project ArgoCD), which supports easy implementation of a GitOps-based administration concept.\nSection 2: With a GitOps approach, all changes are documented in git.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "gitops_operator_exists"
                  }
                ]
              },
              {
                "uuid": "4f95a3ef-fb8f-45df-af57-dc487c242ad9",
                "control-id": "sys-1.6.a1",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "This requirement must be implemented organizationally. OpenShift supports all of the goals mentioned. Comprehensive handouts are available to carry out and document the planning of container use, security and compliance, architecture and installation on OpenShift (see https://www.redhat.com/en/resources/openshift-security-guide-ebook)"
                  }
                ]
              },
              {
                "uuid": "7c22204a-5ae8-4e91-bfc6-b181c688b7b1",
                "control-id": "sys-1.6.a2",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "This requirement must be implemented organizationally. Through OpenShift GitOps, OpenShift technically supports this requirement with a standardized approach to deployment, change handling and deprovisioning via kustomize or Helm charts. OpenShift provides further support through operator-based applications and platform management that automates the processes of commissioning, decommissioning and updates.\nSection 4: Start, stop and monitoring is a basic function of OpenShift. It is not possible to bypass the OpenShift methods to start and stop without manually connecting to a Container Host. For monitoring purposes, OpenShift itself offers Prometheus-based monitoring. Using Advanced Cluster Security for Kubernetes (ACS), policy-based rules can also be used to monitor the containers."
                  }
                ]
              },
              {
                "uuid": "6fc500eb-1fa5-40e1-a503-53225221f104",
                "control-id": "sys-1.6.a3",
                "description": "Section 1: This requirement must be implemented organizationally. Note: This requirement is actively supported by OpenShift. For example, OpenShift does not allow applications with fixed UID/GID settings as standard; on the contrary, these IDs are assigned dynamically (security-by-design). The behavior can be adjusted by administrators, for example for system tasks.\nSection 2: This requirement must be implemented organizationally. Note: OpenShift supports the requirements through strict client separation based on a “Project” (an extension to the Kubernetes namespace). The containers are separated from each other and from the host system via cgroups using SELinux. As long as all applications run “restricted” in the Security Context Constraint (SCC), OpenShift maintains strict client separation.\nSection 3: This requirement must be implemented organizationally. OpenShift supports this requirement by leveraging SELinux with its cgroups to create the container sandbox.\nSection 4: This requirement must be implemented organizationally.\nSection 5: This requirement must be implemented organizationally. Note: OpenShift supports different network infrastructures via the CNI plugin interface (e.g. OVN-Kubernetes, OpenShift-SDN, hardware networks etc.) OVN-Kubernetes, hardware networks etc.) The underlying network is abstracted by the network model in Openshift and usage is consistent across containers. This allows OpenShift to uniformly implement network security features such as: Firewall rules over network policies.\nSection 6: This requirement must be implemented organizationally. Note: OpenShift provides fine-grained metrics for external capacity management via monitoring.\nSection 7: OpenShift offers automated checks for the availability and health of an application. If the LivenessProbe (Health) repeatedly receives a negative result or is not reachable, the affected pod with the container is restarted. Using ReadinessProbe, a container can control whether it is ready to accept HTTP(S) based requests or not. Note: Monitoring is considered in APP.4.4.A11.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_namespace_separation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_node_separation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_network_separation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "coreos_enable_selinux_kernel_argument"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "selinux_state"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "selinux_policytype"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "liveness_readiness_probe_in_workload"
                  }
                ]
              },
              {
                "uuid": "71ac9749-2b4e-44ea-9b8d-5d1789466224",
                "control-id": "sys-1.6.a4",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "This requirement must be implemented organizationally. Note: OpenShift supports the requirement through the built-in functionalities and enables the highest possible level of automation. On the one hand, CI/CD tools are delivered with OpenShift pipelines and integrated into the platform. On the other hand, pre-configured build processes based on Red Hat experience are available that are based on Source2Image and thus support planning. The built-in registry allows you to store images and other associated information, such as Helm charts or SBOMs. The abstractions available in Openshift allow the entire image distribution process to be documented and controlled as code. This further allows the image distribution process to be managed via OpenShift GitOps."
                  }
                ]
              },
              {
                "uuid": "b214d4db-5c03-4274-b935-b71bb6ad77d7",
                "control-id": "sys-1.6.a5",
                "description": "Section 1: Hosts and containers are controlled via the Kubernetes API. This is addressed via api. The load balancer used for this is located in the administration network. The load balancer for *.apps. is set up separately in the active network. This means that the administration is appropriately separated. The Console (the OpenShift web UI) is used by all users. Authorization takes place at the API level and is secured via RBAC. The control plane is to be located in an administration network.\nSection 2: The web UI can be configured on another router that is terminated on the administration load balancer and is therefore only accessible from the administration network. This means that it can no longer be reached from the active network.\nSection 3: This is a standard OpenShift feature. The OpenShift documentation contains the necessary communication paths between control plane, infrastructure and worker nodes, as well as the necessary firewall activations of the underlying network stack at hardware or IaaS level. The communication between containers or pods within a client (“Project”) is not restricted by default, but can be regulated with micro-segmentation if necessary or as a service mesh with mTLS authentication be implemented (see APP.4.4.A18).\nExternally exposed services can receive their own IP and thus data traffic can also be separated outside the platform. Inter-node communication is carried out via suitable tunnel protocols (VXLAN, GENEVE) and can also be encrypted using IPSec.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_network_separation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "configure_network_policies"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "configure_network_policies_namespaces"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "service_firewalld_enabled"
                  }
                ]
              },
              {
                "uuid": "44a435e0-e7a2-4a78-9c0e-7065a0952df0",
                "control-id": "sys-1.6.a6",
                "description": "Section 1: This requirement must be implemented organizationally. Note: OpenShift supports the requirement by allowing only certain sources. This allows the sources from which images come to be restricted and new sources to be added in a controlled process. Quay can also be used to provide your own registry in an open environment as a trustworthy delivery point for external software. Images can also be checked for vulnerabilities here.\nSection 2: This requirement must be implemented organizationally. Note: OpenShift makes it possible to verify the signatures of images before use and thus enforce the identification requirement. Red Hat Advanced Cluster Security for Kubernetes (ACS) can check and optionally enforce signatures as well as certain labels (e.g. MAINTAINER) for images. For images delivered by Red Hat via the official Red Hat Registry, the MAINTAINER label of the container images is always maintained, through which Red Hat can be identified as the creator of the images. Images are also signed with GPG keys.\nSection 3: This requirement must be implemented organizationally. Note: Images from the Red Hat Registry are regularly checked for security vulnerabilities and updated accordingly. The security status of the images is indicated via a health indicator. ACS can perform technical checks through regular scans and report conspicuous containers or containers with identified vulnerabilities, thereby supporting the implementation of the requirement.\nSection 4: This requirement must be implemented organizationally. Note: For discontinued images with appropriate identification (e.g. through labels), policies implemented in ACS can report these violations. ACS also provides policies that report when images have not been scanned for more than 30/60/90 days. However, this means that an image must be built and rolled out at this interval so that the scans during the build process are effective. With a CI/CD pipeline with a high level of automation, this usually does not represent any increased effort.\nSection 5: This requirement must be implemented organizationally. Note: Image-level labels or image tags could be used here.\nSection 6: This requirement must be implemented organizationally for integrated software or self-created software. Note: OpenShift supports Lifecycle Management (OLM) with Operator. Software managed using OLM or Cluster Operator receives updates via the Operator Hub or Cluster Updates. An automated check with automatic or alternatively manual release is possible for this software.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_allowed_registries"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_allowed_registries_for_import"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_insecure_allowed_registries_for_import"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_insecure_registries"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "reject_unsigned_images_by_default"
                  }
                ]
              },
              {
                "uuid": "4983b7a7-0dc3-426d-ae4e-8af9766eeb43",
                "control-id": "sys-1.6.a7",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "OpenShift Logging stores the containers' logging data in a separate log management system. The output of the container is saved as long as it is on STDOUT and STDERR. The logging data can also be forwarded to different log storage depending on the source (e.g. infrastructure or application). It is the responsibility of the applications to write log output to STDOUT and errors to STDERR."
                  }
                ]
              },
              {
                "uuid": "f602a032-d180-4c40-a024-b41c81b7a01a",
                "control-id": "sys-1.6.a8",
                "description": "Section 1: OpenShift offers secrets that are only available to the containers and the people authorized via RBAC in the tenant or project (client). Section 2: This requirement must be enforced as part of application development. OpenShift offers suitable mechanisms (secrets) with encryption of the etcd store if necessary. Section 3: OpenShift offers corresponding mechanisms (secrets). Unless the secrets are dynamically generated, third-party/community tools such as SealedSecrets or HashiCorp Vault can help securely deploy the secrets. Section 4: This requirement must be implemented organizationally. All of this information can and should be managed in Secrets.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_least_privilege"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_limit_secrets_access"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_limit_cluster_admin"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_wildcard_use"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_roles_defined"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_cluster_roles_defined"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "api_server_encryption_provider_cipher"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "secrets_no_environment_variables"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "secrets_consider_external_storage"
                  }
                ]
              },
              {
                "uuid": "6b3fce8c-765c-421c-8eb5-9a8864cbf869",
                "control-id": "sys-1.6.a9",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "Section 1: This requirement must be implemented organizationally. Section 2: This requirement must be implemented organizationally and be part of the application development process. Section 3: This requirement must be implemented organizationally and suppliers must be contractually obliged to comply."
                  }
                ]
              },
              {
                "uuid": "c59a9eff-6d6b-4c70-838c-0eee30626d78",
                "control-id": "sys-1.6.a10",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "These requirements must be implemented organizationally."
                  }
                ]
              },
              {
                "uuid": "2a90e75e-60e5-4fd7-8a8c-3d9173d3d5e5",
                "control-id": "sys-1.6.a11",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "This requirement must be implemented organizationally."
                  }
                ]
              },
              {
                "uuid": "566d199b-8873-4808-be41-22ec0bbb363f",
                "control-id": "sys-1.6.a12",
                "description": "Section 1: The source of images can be restricted by configuring the allowed registries. In addition, this requirement must be implemented organizationally. Section 2: This requirement must be implemented organizationally. Section 3: This requirement is solved using image labels. Red Hat Images contain the labels io.k8s.description, summary, vender, version, url, vcs-ref and vcs-type, through which the delivered images are transparent in their function and history. For internal images, the existence of the labels can be ensured during application development. The existence of the corresponding labels can be ensured via ACS. Section 4: OpenShift can be configured to assign a digital signature to each approved registry. OpenShift then only executes images from this registry that are secured using this signature.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "partial"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_allowed_registries"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_allowed_registries_for_import"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "reject_unsigned_images_by_default"
                  }
                ]
              },
              {
                "uuid": "50155f1f-c588-460e-be73-138ed8ac5ab6",
                "control-id": "sys-1.6.a13",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "This requirement must be solved organizationally. Note: OpenShift offers various CI/CD solutions that can be used for automation. OpenShift Pipelines (Tekton-based) and traditional Jenkins are available directly in OpenShift. If the user uses gitlab-ci or github Actions, the runners can be executed in OpenShift. If the release process contains specific artifacts such as if you require SBOMs or the ability to statically analyze Dockerfiles, Quay and ACS can provide the necessary functionality."
                  }
                ]
              },
              {
                "uuid": "f25d2231-29c9-4cfe-bb4e-8bdeeea77881",
                "control-id": "sys-1.6.a14",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "Section 1: This requirement must be solved organizationally. Best practices use multiple environments (either separate clusters or multiple namespaces on a cluster) to support this process and enable automated testing (e.g. via OpenShift Pipelines or Jenkins ). Section 2: “Persistent” containers contradict the cloud native principle and do not represent “good practice”. There is also a contradiction with APP.4.4.A21 “Regular restart of pods”. Accordingly, OpenShift does not support updates at the container level. Changes to the container image always result in the pod stopping and a new pod being restarted. With the recommended use of GitOps, this is a reprovisioning of the changed elements and also documents the status of the application at a given point in time. Due to the high level of automation, this usually does not represent any increased effort."
                  }
                ]
              },
              {
                "uuid": "375c3a0d-2782-45f2-91e9-18cea7ad54b9",
                "control-id": "sys-1.6.a15",
                "description": "Section 1: OpenShift supports the configuration of quotas for a project (client). Applications can have their resources appropriately limited using limits/requests. Network bandwidth is limited at the pod level and can be determined separately according to incoming and outgoing network bandwidth. In addition, outgoing traffic (egress) can be marked at the namespace level with differentiated services code point (DSCP) classifications in order to assign quality of service classes to the outgoing packets in the physical network. Section 2: This requirement must be implemented organizationally. Note: The behavior of OpenShift completely replicates the standard behavior of Kubernetes. If CPU limits are exceeded, the process is slowed down. If volatile memory is exceeded, the process is stopped and restarted by the scheduler. The persistent memory management is responsible for exceeding the persistent memory - OpenShift will not enforce or limit anything here. Compliance with the limited network bandwidth is enforced by dropping packets that exceed the limit.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "project_config_and_template_resource_quota"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "project_template_resource_quota"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "resource_requests_limits_in_daemonset"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "resource_requests_limits_in_deployment"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "resource_requests_limits_in_statefulset"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "resource_requests_quota"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "resource_requests_quota_cluster"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "resource_requests_quota_per_project"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "configure_network_bandwidth"
                  }
                ]
              },
              {
                "uuid": "387170bb-7fc3-4c1f-8abf-aec5a44f9080",
                "control-id": "sys-1.6.a16",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "Section 1: Application containers can only access administrative services remotely. Privileged containers can gain access to the host, the host's file system, or the host's network. This is necessary, for example, for the infrastructure services of OpenShift (ingress router). Normal applications (application containers) may not receive such permissions.\nSection 2: This requirement must be partially implemented organizationally and should be part of the guideline defined in SYS.1.6.A10. There may be exceptions for applications that should/need to make configurations to Kubernetes resources. This means they have administrative remote access to the corresponding Kubernetes resources. Remote access is controlled by Kubernetes and backup takes place via the Kubernetes functionalities (see module APP.4.4). The operating system including Mandatory Access Control is optimized as a runtime environment for Kubernetes. In general, it is possible to limit the provision/post-installation of remote access programs in the container. Also the container runtime security tools can detect, alert and remediate, if remote access daemon processes such as SSHD are running in a container.\nSection 3: This requirement should also be included in the policy described in SYS.1.6.A10. OpenShift only allows access to the configured ports. A container that provides remote maintenance access to these ports may not be released. Application containers should be administered exclusively via the container runtime. Using a policy, known remote access ports (e.g. 22, RDP, etc.) can be reported via ACS and their use prevented.\nSection 4: This is standard in OpenShift environments. OpenShift offers a terminal login via the oc administration tool. Communication runs via the control plane to the container and is both authenticated and authorized."
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_drop_container_capabilities"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_container_allowed_capabilities"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_host_dir_volume_plugin"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_host_ports"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_ipc_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_net_raw_capability"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_network_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_privilege_escalation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_privileged_containers"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_process_id_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_root_containers"
                  }
                ]
              },
              {
                "uuid": "d8110464-912a-4b34-99d8-c30865c72769",
                "control-id": "sys-1.6.a17",
                "description": "Section 1: With OpenShift, application containers run in the Security Context Constraint (SCC) “restricted” by default. Section 2: OpenShift supports encapsulation by using SELinux. If necessary, entire nodes can also be encapsulated via underlying virtualization. This is always necessary when application containers require extended security context constraints (SCCs). With the sandbox function based on Kata Containers, OpenShift provides a convenient way to isolate containers using virtualization technology. Section 3: OpenShift offers several SCC to restrict access to the network, file system or the host itself. This should only be allowed for administrative applications such as SIEM scanners or other infrastructure services that require access to the host. These SCCs should never be given to application containers. Section 4: These exceptions must be documented in the operational documentation. A list of pods with the corresponding SCC annotation can serve as the basis for the documentation.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "partial"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_drop_container_capabilities"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_container_allowed_capabilities"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_host_dir_volume_plugin"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_host_ports"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_ipc_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_net_raw_capability"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_network_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_privilege_escalation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_privileged_containers"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_process_id_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_root_containers"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "sandboxed_containers_operator_exists"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "sandboxed_containers_operator_configured"
                  }
                ]
              },
              {
                "uuid": "c33a3ce5-4ece-48de-96b9-16dfdf94f1eb",
                "control-id": "sys-1.6.a18",
                "description": "Section 1: With OpenShift, accounts within the container are separated from the host system by SELinux. This includes preventing the use of privileged user and group IDs as well as corresponding rights extensions (SET-UID, Set-GID bit). A range of UIDs/GIDs is provided for use in containers.\nSection 2: Security Context Constraints (SCCs) allow accounts in the container to gain controlled access.\nSection 3: The host system Red Hat CoreOS is immutable. The changes to the host operating system should only be made by OpenShift and should be necessary so that hardening by Red Hat is not inadvertently undermined. Since, in contrast to an unprotected container runtime environment, SELinux enforces the separation between the container runtime and the operating system, this mirroring of account names is not necessary.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "coreos_enable_selinux_kernel_argument"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "selinux_policytype"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "selinux_state"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_apply_scc"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_privileged_containers"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_root_containers"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_ipc_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_process_id_namespace"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_host_dir_volume_plugin"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_net_raw_capability"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_network_namespace"
                  }
                ]
              },
              {
                "uuid": "046357b7-d2de-47ca-822a-f35e93ee0331",
                "control-id": "sys-1.6.a19",
                "description": "Section 1: Applications can access persistent volumes (PVs) and temporary (ephemeral) storage in OpenShift. Persisted volumes are connected as network storage, ephemeral storage serves primarily as volatile, short-lived mass storage and is allocated within the container file system. This configures which PV can be reached and the use of the ephemeral storage is separated per pod. This means that each pod has its own volatile mass storage. Volumes can be limited in size.\nSection 2: OpenShift implements the principle of least privileges. The definition is made via an explicit configuration at the deployment level.\nSection 3: By default, no local storage is included. For reasons of reliability, this is explicitly not recommended.\nSection 4: The network storage dictates the permissions. OpenShift supports this with the dynamically assigned UID/GID of the projects (clients).",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "scc_limit_host_dir_volume_plugin"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_least_privilege"
                  }
                ]
              },
              {
                "uuid": "b6051267-be22-47a6-9efb-ec9c0de736f0",
                "control-id": "sys-1.6.a20",
                "description": "Section 1: OpenShift only maintains the current version of the configuration. It is therefore recommended to use GitOps, in which the configuration is transferred from a git repository to the OpenShift cluster. OpenShift includes OpenShift GitOps (based on the community project ArgoCD), which supports easy implementation of a GitOps-based administration concept.\nSection 2: With a GitOps approach, all changes are documented in git.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "gitops_operator_exists"
                  }
                ]
              },
              {
                "uuid": "66cecc57-af93-4d52-88a9-e9d66a6763db",
                "control-id": "sys-1.6.a1",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "This requirement must be implemented organizationally. OpenShift supports all of the goals mentioned. Comprehensive handouts are available to carry out and document the planning of container use, security and compliance, architecture and installation on OpenShift (see https://www.redhat.com/en/resources/openshift-security-guide-ebook)"
                  }
                ]
              },
              {
                "uuid": "f16b7941-6e17-43e8-bbb6-d5a7a8a3fd5f",
                "control-id": "sys-1.6.a2",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "This requirement must be implemented organizationally. Through OpenShift GitOps, OpenShift technically supports this requirement with a standardized approach to deployment, change handling and deprovisioning via kustomize or Helm charts. OpenShift provides further support through operator-based applications and platform management that automates the processes of commissioning, decommissioning and updates.\nSection 4: Start, stop and monitoring is a basic function of OpenShift. It is not possible to bypass the OpenShift methods to start and stop without manually connecting to a Container Host. For monitoring purposes, OpenShift itself offers Prometheus-based monitoring. Using Advanced Cluster Security for Kubernetes (ACS), policy-based rules can also be used to monitor the containers."
                  }
                ]
              },
              {
                "uuid": "966dd454-a7ac-41c5-a684-80150038e091",
                "control-id": "sys-1.6.a3",
                "description": "Section 1: This requirement must be implemented organizationally. Note: This requirement is actively supported by OpenShift. For example, OpenShift does not allow applications with fixed UID/GID settings as standard; on the contrary, these IDs are assigned dynamically (security-by-design). The behavior can be adjusted by administrators, for example for system tasks.\nSection 2: This requirement must be implemented organizationally. Note: OpenShift supports the requirements through strict client separation based on a “Project” (an extension to the Kubernetes namespace). The containers are separated from each other and from the host system via cgroups using SELinux. As long as all applications run “restricted” in the Security Context Constraint (SCC), OpenShift maintains strict client separation.\nSection 3: This requirement must be implemented organizationally. OpenShift supports this requirement by leveraging SELinux with its cgroups to create the container sandbox.\nSection 4: This requirement must be implemented organizationally.\nSection 5: This requirement must be implemented organizationally. Note: OpenShift supports different network infrastructures via the CNI plugin interface (e.g. OVN-Kubernetes, OpenShift-SDN, hardware networks etc.) OVN-Kubernetes, hardware networks etc.) The underlying network is abstracted by the network model in Openshift and usage is consistent across containers. This allows OpenShift to uniformly implement network security features such as: Firewall rules over network policies.\nSection 6: This requirement must be implemented organizationally. Note: OpenShift provides fine-grained metrics for external capacity management via monitoring.\nSection 7: OpenShift offers automated checks for the availability and health of an application. If the LivenessProbe (Health) repeatedly receives a negative result or is not reachable, the affected pod with the container is restarted. Using ReadinessProbe, a container can control whether it is ready to accept HTTP(S) based requests or not. Note: Monitoring is considered in APP.4.4.A11.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_namespace_separation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_node_separation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_network_separation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "coreos_enable_selinux_kernel_argument"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "selinux_state"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "selinux_policytype"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "liveness_readiness_probe_in_workload"
                  }
                ]
              },
              {
                "uuid": "82b3bf1f-bebe-4b55-8b7d-09e0885c09cf",
                "control-id": "sys-1.6.a4",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "This requirement must be implemented organizationally. Note: OpenShift supports the requirement through the built-in functionalities and enables the highest possible level of automation. On the one hand, CI/CD tools are delivered with OpenShift pipelines and integrated into the platform. On the other hand, pre-configured build processes based on Red Hat experience are available that are based on Source2Image and thus support planning. The built-in registry allows you to store images and other associated information, such as Helm charts or SBOMs. The abstractions available in Openshift allow the entire image distribution process to be documented and controlled as code. This further allows the image distribution process to be managed via OpenShift GitOps."
                  }
                ]
              },
              {
                "uuid": "4b3a719a-9d87-48a1-85e0-5baa325a8860",
                "control-id": "sys-1.6.a5",
                "description": "Section 1: Hosts and containers are controlled via the Kubernetes API. This is addressed via api. The load balancer used for this is located in the administration network. The load balancer for *.apps. is set up separately in the active network. This means that the administration is appropriately separated. The Console (the OpenShift web UI) is used by all users. Authorization takes place at the API level and is secured via RBAC. The control plane is to be located in an administration network.\nSection 2: The web UI can be configured on another router that is terminated on the administration load balancer and is therefore only accessible from the administration network. This means that it can no longer be reached from the active network.\nSection 3: This is a standard OpenShift feature. The OpenShift documentation contains the necessary communication paths between control plane, infrastructure and worker nodes, as well as the necessary firewall activations of the underlying network stack at hardware or IaaS level. The communication between containers or pods within a client (“Project”) is not restricted by default, but can be regulated with micro-segmentation if necessary or as a service mesh with mTLS authentication be implemented (see APP.4.4.A18).\nExternally exposed services can receive their own IP and thus data traffic can also be separated outside the platform. Inter-node communication is carried out via suitable tunnel protocols (VXLAN, GENEVE) and can also be encrypted using IPSec.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "general_network_separation"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "configure_network_policies"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "configure_network_policies_namespaces"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "service_firewalld_enabled"
                  }
                ]
              },
              {
                "uuid": "bd930aa7-e725-4886-b545-45d1038caa47",
                "control-id": "sys-1.6.a6",
                "description": "Section 1: This requirement must be implemented organizationally. Note: OpenShift supports the requirement by allowing only certain sources. This allows the sources from which images come to be restricted and new sources to be added in a controlled process. Quay can also be used to provide your own registry in an open environment as a trustworthy delivery point for external software. Images can also be checked for vulnerabilities here.\nSection 2: This requirement must be implemented organizationally. Note: OpenShift makes it possible to verify the signatures of images before use and thus enforce the identification requirement. Red Hat Advanced Cluster Security for Kubernetes (ACS) can check and optionally enforce signatures as well as certain labels (e.g. MAINTAINER) for images. For images delivered by Red Hat via the official Red Hat Registry, the MAINTAINER label of the container images is always maintained, through which Red Hat can be identified as the creator of the images. Images are also signed with GPG keys.\nSection 3: This requirement must be implemented organizationally. Note: Images from the Red Hat Registry are regularly checked for security vulnerabilities and updated accordingly. The security status of the images is indicated via a health indicator. ACS can perform technical checks through regular scans and report conspicuous containers or containers with identified vulnerabilities, thereby supporting the implementation of the requirement.\nSection 4: This requirement must be implemented organizationally. Note: For discontinued images with appropriate identification (e.g. through labels), policies implemented in ACS can report these violations. ACS also provides policies that report when images have not been scanned for more than 30/60/90 days. However, this means that an image must be built and rolled out at this interval so that the scans during the build process are effective. With a CI/CD pipeline with a high level of automation, this usually does not represent any increased effort.\nSection 5: This requirement must be implemented organizationally. Note: Image-level labels or image tags could be used here.\nSection 6: This requirement must be implemented organizationally for integrated software or self-created software. Note: OpenShift supports Lifecycle Management (OLM) with Operator. Software managed using OLM or Cluster Operator receives updates via the Operator Hub or Cluster Updates. An automated check with automatic or alternatively manual release is possible for this software.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_allowed_registries"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_allowed_registries_for_import"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_insecure_allowed_registries_for_import"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "ocp_insecure_registries"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "reject_unsigned_images_by_default"
                  }
                ]
              },
              {
                "uuid": "6d784e8c-dae0-46e1-bff6-7ad3548fffaa",
                "control-id": "sys-1.6.a7",
                "description": "REPLACE_ME",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "alternative",
                    "remarks": "OpenShift Logging stores the containers' logging data in a separate log management system. The output of the container is saved as long as it is on STDOUT and STDERR. The logging data can also be forwarded to different log storage depending on the source (e.g. infrastructure or application). It is the responsibility of the applications to write log output to STDOUT and errors to STDERR."
                  }
                ]
              },
              {
                "uuid": "1087d7f4-5c1e-487c-a071-f4d1f4c83ea3",
                "control-id": "sys-1.6.a8",
                "description": "Section 1: OpenShift offers secrets that are only available to the containers and the people authorized via RBAC in the tenant or project (client). Section 2: This requirement must be enforced as part of application development. OpenShift offers suitable mechanisms (secrets) with encryption of the etcd store if necessary. Section 3: OpenShift offers corresponding mechanisms (secrets). Unless the secrets are dynamically generated, third-party/community tools such as SealedSecrets or HashiCorp Vault can help securely deploy the secrets. Section 4: This requirement must be implemented organizationally. All of this information can and should be managed in Secrets.",
                "props": [
                  {
                    "name": "implementation-status",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "implemented"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_least_privilege"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_limit_secrets_access"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_limit_cluster_admin"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_wildcard_use"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_roles_defined"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "rbac_cluster_roles_defined"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "api_server_encryption_provider_cipher"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "secrets_no_environment_variables"
                  },
                  {
                    "name": "Rule_Id",
                    "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "secrets_consider_external_storage"
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}
